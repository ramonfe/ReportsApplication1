//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ReportsApplication1 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EficienDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EficienDataSet : global::System.Data.DataSet {
        
        private DepartamentosDataTable tableDepartamentos;
        
        private CentrosTrabajosDataTable tableCentrosTrabajos;
        
        private LineasDataTable tableLineas;
        
        private CodigosDeOperacionDataTable tableCodigosDeOperacion;
        
        private vouchersDataTable tablevouchers;
        
        private lstLineasDataTable tablelstLineas;
        
        private EmpleadosDataTable tableEmpleados;
        
        private lstCodDirDataTable tablelstCodDir;
        
        private lstCodIndDataTable tablelstCodInd;
        
        private lstFbusDataTable tablelstFbus;
        
        private SupervisoresDataTable tableSupervisores;
        
        private efByDeptoDataTable tableefByDepto;
        
        private conciliacionDataTable tableconciliacion;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EficienDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EficienDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Departamentos"] != null)) {
                    base.Tables.Add(new DepartamentosDataTable(ds.Tables["Departamentos"]));
                }
                if ((ds.Tables["CentrosTrabajos"] != null)) {
                    base.Tables.Add(new CentrosTrabajosDataTable(ds.Tables["CentrosTrabajos"]));
                }
                if ((ds.Tables["Lineas"] != null)) {
                    base.Tables.Add(new LineasDataTable(ds.Tables["Lineas"]));
                }
                if ((ds.Tables["CodigosDeOperacion"] != null)) {
                    base.Tables.Add(new CodigosDeOperacionDataTable(ds.Tables["CodigosDeOperacion"]));
                }
                if ((ds.Tables["vouchers"] != null)) {
                    base.Tables.Add(new vouchersDataTable(ds.Tables["vouchers"]));
                }
                if ((ds.Tables["lstLineas"] != null)) {
                    base.Tables.Add(new lstLineasDataTable(ds.Tables["lstLineas"]));
                }
                if ((ds.Tables["Empleados"] != null)) {
                    base.Tables.Add(new EmpleadosDataTable(ds.Tables["Empleados"]));
                }
                if ((ds.Tables["lstCodDir"] != null)) {
                    base.Tables.Add(new lstCodDirDataTable(ds.Tables["lstCodDir"]));
                }
                if ((ds.Tables["lstCodInd"] != null)) {
                    base.Tables.Add(new lstCodIndDataTable(ds.Tables["lstCodInd"]));
                }
                if ((ds.Tables["lstFbus"] != null)) {
                    base.Tables.Add(new lstFbusDataTable(ds.Tables["lstFbus"]));
                }
                if ((ds.Tables["Supervisores"] != null)) {
                    base.Tables.Add(new SupervisoresDataTable(ds.Tables["Supervisores"]));
                }
                if ((ds.Tables["efByDepto"] != null)) {
                    base.Tables.Add(new efByDeptoDataTable(ds.Tables["efByDepto"]));
                }
                if ((ds.Tables["conciliacion"] != null)) {
                    base.Tables.Add(new conciliacionDataTable(ds.Tables["conciliacion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DepartamentosDataTable Departamentos {
            get {
                return this.tableDepartamentos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CentrosTrabajosDataTable CentrosTrabajos {
            get {
                return this.tableCentrosTrabajos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LineasDataTable Lineas {
            get {
                return this.tableLineas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CodigosDeOperacionDataTable CodigosDeOperacion {
            get {
                return this.tableCodigosDeOperacion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vouchersDataTable vouchers {
            get {
                return this.tablevouchers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lstLineasDataTable lstLineas {
            get {
                return this.tablelstLineas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmpleadosDataTable Empleados {
            get {
                return this.tableEmpleados;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lstCodDirDataTable lstCodDir {
            get {
                return this.tablelstCodDir;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lstCodIndDataTable lstCodInd {
            get {
                return this.tablelstCodInd;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lstFbusDataTable lstFbus {
            get {
                return this.tablelstFbus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SupervisoresDataTable Supervisores {
            get {
                return this.tableSupervisores;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public efByDeptoDataTable efByDepto {
            get {
                return this.tableefByDepto;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public conciliacionDataTable conciliacion {
            get {
                return this.tableconciliacion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EficienDataSet cln = ((EficienDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Departamentos"] != null)) {
                    base.Tables.Add(new DepartamentosDataTable(ds.Tables["Departamentos"]));
                }
                if ((ds.Tables["CentrosTrabajos"] != null)) {
                    base.Tables.Add(new CentrosTrabajosDataTable(ds.Tables["CentrosTrabajos"]));
                }
                if ((ds.Tables["Lineas"] != null)) {
                    base.Tables.Add(new LineasDataTable(ds.Tables["Lineas"]));
                }
                if ((ds.Tables["CodigosDeOperacion"] != null)) {
                    base.Tables.Add(new CodigosDeOperacionDataTable(ds.Tables["CodigosDeOperacion"]));
                }
                if ((ds.Tables["vouchers"] != null)) {
                    base.Tables.Add(new vouchersDataTable(ds.Tables["vouchers"]));
                }
                if ((ds.Tables["lstLineas"] != null)) {
                    base.Tables.Add(new lstLineasDataTable(ds.Tables["lstLineas"]));
                }
                if ((ds.Tables["Empleados"] != null)) {
                    base.Tables.Add(new EmpleadosDataTable(ds.Tables["Empleados"]));
                }
                if ((ds.Tables["lstCodDir"] != null)) {
                    base.Tables.Add(new lstCodDirDataTable(ds.Tables["lstCodDir"]));
                }
                if ((ds.Tables["lstCodInd"] != null)) {
                    base.Tables.Add(new lstCodIndDataTable(ds.Tables["lstCodInd"]));
                }
                if ((ds.Tables["lstFbus"] != null)) {
                    base.Tables.Add(new lstFbusDataTable(ds.Tables["lstFbus"]));
                }
                if ((ds.Tables["Supervisores"] != null)) {
                    base.Tables.Add(new SupervisoresDataTable(ds.Tables["Supervisores"]));
                }
                if ((ds.Tables["efByDepto"] != null)) {
                    base.Tables.Add(new efByDeptoDataTable(ds.Tables["efByDepto"]));
                }
                if ((ds.Tables["conciliacion"] != null)) {
                    base.Tables.Add(new conciliacionDataTable(ds.Tables["conciliacion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDepartamentos = ((DepartamentosDataTable)(base.Tables["Departamentos"]));
            if ((initTable == true)) {
                if ((this.tableDepartamentos != null)) {
                    this.tableDepartamentos.InitVars();
                }
            }
            this.tableCentrosTrabajos = ((CentrosTrabajosDataTable)(base.Tables["CentrosTrabajos"]));
            if ((initTable == true)) {
                if ((this.tableCentrosTrabajos != null)) {
                    this.tableCentrosTrabajos.InitVars();
                }
            }
            this.tableLineas = ((LineasDataTable)(base.Tables["Lineas"]));
            if ((initTable == true)) {
                if ((this.tableLineas != null)) {
                    this.tableLineas.InitVars();
                }
            }
            this.tableCodigosDeOperacion = ((CodigosDeOperacionDataTable)(base.Tables["CodigosDeOperacion"]));
            if ((initTable == true)) {
                if ((this.tableCodigosDeOperacion != null)) {
                    this.tableCodigosDeOperacion.InitVars();
                }
            }
            this.tablevouchers = ((vouchersDataTable)(base.Tables["vouchers"]));
            if ((initTable == true)) {
                if ((this.tablevouchers != null)) {
                    this.tablevouchers.InitVars();
                }
            }
            this.tablelstLineas = ((lstLineasDataTable)(base.Tables["lstLineas"]));
            if ((initTable == true)) {
                if ((this.tablelstLineas != null)) {
                    this.tablelstLineas.InitVars();
                }
            }
            this.tableEmpleados = ((EmpleadosDataTable)(base.Tables["Empleados"]));
            if ((initTable == true)) {
                if ((this.tableEmpleados != null)) {
                    this.tableEmpleados.InitVars();
                }
            }
            this.tablelstCodDir = ((lstCodDirDataTable)(base.Tables["lstCodDir"]));
            if ((initTable == true)) {
                if ((this.tablelstCodDir != null)) {
                    this.tablelstCodDir.InitVars();
                }
            }
            this.tablelstCodInd = ((lstCodIndDataTable)(base.Tables["lstCodInd"]));
            if ((initTable == true)) {
                if ((this.tablelstCodInd != null)) {
                    this.tablelstCodInd.InitVars();
                }
            }
            this.tablelstFbus = ((lstFbusDataTable)(base.Tables["lstFbus"]));
            if ((initTable == true)) {
                if ((this.tablelstFbus != null)) {
                    this.tablelstFbus.InitVars();
                }
            }
            this.tableSupervisores = ((SupervisoresDataTable)(base.Tables["Supervisores"]));
            if ((initTable == true)) {
                if ((this.tableSupervisores != null)) {
                    this.tableSupervisores.InitVars();
                }
            }
            this.tableefByDepto = ((efByDeptoDataTable)(base.Tables["efByDepto"]));
            if ((initTable == true)) {
                if ((this.tableefByDepto != null)) {
                    this.tableefByDepto.InitVars();
                }
            }
            this.tableconciliacion = ((conciliacionDataTable)(base.Tables["conciliacion"]));
            if ((initTable == true)) {
                if ((this.tableconciliacion != null)) {
                    this.tableconciliacion.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EficienDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EficienDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDepartamentos = new DepartamentosDataTable();
            base.Tables.Add(this.tableDepartamentos);
            this.tableCentrosTrabajos = new CentrosTrabajosDataTable();
            base.Tables.Add(this.tableCentrosTrabajos);
            this.tableLineas = new LineasDataTable();
            base.Tables.Add(this.tableLineas);
            this.tableCodigosDeOperacion = new CodigosDeOperacionDataTable();
            base.Tables.Add(this.tableCodigosDeOperacion);
            this.tablevouchers = new vouchersDataTable();
            base.Tables.Add(this.tablevouchers);
            this.tablelstLineas = new lstLineasDataTable();
            base.Tables.Add(this.tablelstLineas);
            this.tableEmpleados = new EmpleadosDataTable();
            base.Tables.Add(this.tableEmpleados);
            this.tablelstCodDir = new lstCodDirDataTable();
            base.Tables.Add(this.tablelstCodDir);
            this.tablelstCodInd = new lstCodIndDataTable();
            base.Tables.Add(this.tablelstCodInd);
            this.tablelstFbus = new lstFbusDataTable();
            base.Tables.Add(this.tablelstFbus);
            this.tableSupervisores = new SupervisoresDataTable();
            base.Tables.Add(this.tableSupervisores);
            this.tableefByDepto = new efByDeptoDataTable();
            base.Tables.Add(this.tableefByDepto);
            this.tableconciliacion = new conciliacionDataTable();
            base.Tables.Add(this.tableconciliacion);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDepartamentos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCentrosTrabajos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLineas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCodigosDeOperacion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevouchers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializelstLineas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEmpleados() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializelstCodDir() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializelstCodInd() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializelstFbus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSupervisores() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeefByDepto() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeconciliacion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EficienDataSet ds = new EficienDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DepartamentosRowChangeEventHandler(object sender, DepartamentosRowChangeEvent e);
        
        public delegate void CentrosTrabajosRowChangeEventHandler(object sender, CentrosTrabajosRowChangeEvent e);
        
        public delegate void LineasRowChangeEventHandler(object sender, LineasRowChangeEvent e);
        
        public delegate void CodigosDeOperacionRowChangeEventHandler(object sender, CodigosDeOperacionRowChangeEvent e);
        
        public delegate void vouchersRowChangeEventHandler(object sender, vouchersRowChangeEvent e);
        
        public delegate void lstLineasRowChangeEventHandler(object sender, lstLineasRowChangeEvent e);
        
        public delegate void EmpleadosRowChangeEventHandler(object sender, EmpleadosRowChangeEvent e);
        
        public delegate void lstCodDirRowChangeEventHandler(object sender, lstCodDirRowChangeEvent e);
        
        public delegate void lstCodIndRowChangeEventHandler(object sender, lstCodIndRowChangeEvent e);
        
        public delegate void lstFbusRowChangeEventHandler(object sender, lstFbusRowChangeEvent e);
        
        public delegate void SupervisoresRowChangeEventHandler(object sender, SupervisoresRowChangeEvent e);
        
        public delegate void efByDeptoRowChangeEventHandler(object sender, efByDeptoRowChangeEvent e);
        
        public delegate void conciliacionRowChangeEventHandler(object sender, conciliacionRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DepartamentosDataTable : global::System.Data.TypedTableBase<DepartamentosRow> {
            
            private global::System.Data.DataColumn columnDepartamento;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnFBU;
            
            private global::System.Data.DataColumn columnfbu_desc;
            
            private global::System.Data.DataColumn columnoverhead;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartamentosDataTable() {
                this.TableName = "Departamentos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartamentosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DepartamentosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartamentoColumn {
                get {
                    return this.columnDepartamento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FBUColumn {
                get {
                    return this.columnFBU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fbu_descColumn {
                get {
                    return this.columnfbu_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn overheadColumn {
                get {
                    return this.columnoverhead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartamentosRow this[int index] {
                get {
                    return ((DepartamentosRow)(this.Rows[index]));
                }
            }
            
            public event DepartamentosRowChangeEventHandler DepartamentosRowChanging;
            
            public event DepartamentosRowChangeEventHandler DepartamentosRowChanged;
            
            public event DepartamentosRowChangeEventHandler DepartamentosRowDeleting;
            
            public event DepartamentosRowChangeEventHandler DepartamentosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDepartamentosRow(DepartamentosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartamentosRow AddDepartamentosRow(string Departamento, string Descripcion, string FBU, string fbu_desc, string overhead) {
                DepartamentosRow rowDepartamentosRow = ((DepartamentosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Departamento,
                        Descripcion,
                        FBU,
                        fbu_desc,
                        overhead};
                rowDepartamentosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDepartamentosRow);
                return rowDepartamentosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DepartamentosDataTable cln = ((DepartamentosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DepartamentosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDepartamento = base.Columns["Departamento"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnFBU = base.Columns["FBU"];
                this.columnfbu_desc = base.Columns["fbu_desc"];
                this.columnoverhead = base.Columns["overhead"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDepartamento = new global::System.Data.DataColumn("Departamento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartamento);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnFBU = new global::System.Data.DataColumn("FBU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFBU);
                this.columnfbu_desc = new global::System.Data.DataColumn("fbu_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfbu_desc);
                this.columnoverhead = new global::System.Data.DataColumn("overhead", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoverhead);
                this.columnDepartamento.MaxLength = 4;
                this.columnDescripcion.MaxLength = 225;
                this.columnFBU.MaxLength = 4;
                this.columnfbu_desc.MaxLength = 225;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartamentosRow NewDepartamentosRow() {
                return ((DepartamentosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DepartamentosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DepartamentosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DepartamentosRowChanged != null)) {
                    this.DepartamentosRowChanged(this, new DepartamentosRowChangeEvent(((DepartamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DepartamentosRowChanging != null)) {
                    this.DepartamentosRowChanging(this, new DepartamentosRowChangeEvent(((DepartamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DepartamentosRowDeleted != null)) {
                    this.DepartamentosRowDeleted(this, new DepartamentosRowChangeEvent(((DepartamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DepartamentosRowDeleting != null)) {
                    this.DepartamentosRowDeleting(this, new DepartamentosRowChangeEvent(((DepartamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDepartamentosRow(DepartamentosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DepartamentosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CentrosTrabajosDataTable : global::System.Data.TypedTableBase<CentrosTrabajosRow> {
            
            private global::System.Data.DataColumn columnCentroTrabajo;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnDepartamento;
            
            private global::System.Data.DataColumn columndepDesc;
            
            private global::System.Data.DataColumn columnFBU;
            
            private global::System.Data.DataColumn columnfbu_desc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentrosTrabajosDataTable() {
                this.TableName = "CentrosTrabajos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CentrosTrabajosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CentrosTrabajosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CentroTrabajoColumn {
                get {
                    return this.columnCentroTrabajo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartamentoColumn {
                get {
                    return this.columnDepartamento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn depDescColumn {
                get {
                    return this.columndepDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FBUColumn {
                get {
                    return this.columnFBU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fbu_descColumn {
                get {
                    return this.columnfbu_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentrosTrabajosRow this[int index] {
                get {
                    return ((CentrosTrabajosRow)(this.Rows[index]));
                }
            }
            
            public event CentrosTrabajosRowChangeEventHandler CentrosTrabajosRowChanging;
            
            public event CentrosTrabajosRowChangeEventHandler CentrosTrabajosRowChanged;
            
            public event CentrosTrabajosRowChangeEventHandler CentrosTrabajosRowDeleting;
            
            public event CentrosTrabajosRowChangeEventHandler CentrosTrabajosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCentrosTrabajosRow(CentrosTrabajosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentrosTrabajosRow AddCentrosTrabajosRow(string CentroTrabajo, string Descripcion, string Departamento, string depDesc, string FBU, string fbu_desc) {
                CentrosTrabajosRow rowCentrosTrabajosRow = ((CentrosTrabajosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CentroTrabajo,
                        Descripcion,
                        Departamento,
                        depDesc,
                        FBU,
                        fbu_desc};
                rowCentrosTrabajosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCentrosTrabajosRow);
                return rowCentrosTrabajosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CentrosTrabajosDataTable cln = ((CentrosTrabajosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CentrosTrabajosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCentroTrabajo = base.Columns["CentroTrabajo"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnDepartamento = base.Columns["Departamento"];
                this.columndepDesc = base.Columns["depDesc"];
                this.columnFBU = base.Columns["FBU"];
                this.columnfbu_desc = base.Columns["fbu_desc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCentroTrabajo = new global::System.Data.DataColumn("CentroTrabajo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCentroTrabajo);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnDepartamento = new global::System.Data.DataColumn("Departamento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartamento);
                this.columndepDesc = new global::System.Data.DataColumn("depDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepDesc);
                this.columnFBU = new global::System.Data.DataColumn("FBU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFBU);
                this.columnfbu_desc = new global::System.Data.DataColumn("fbu_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfbu_desc);
                this.columnCentroTrabajo.MaxLength = 4;
                this.columnDescripcion.MaxLength = 50;
                this.columnDepartamento.MaxLength = 4;
                this.columndepDesc.MaxLength = 225;
                this.columnFBU.MaxLength = 4;
                this.columnfbu_desc.MaxLength = 225;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentrosTrabajosRow NewCentrosTrabajosRow() {
                return ((CentrosTrabajosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CentrosTrabajosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CentrosTrabajosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CentrosTrabajosRowChanged != null)) {
                    this.CentrosTrabajosRowChanged(this, new CentrosTrabajosRowChangeEvent(((CentrosTrabajosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CentrosTrabajosRowChanging != null)) {
                    this.CentrosTrabajosRowChanging(this, new CentrosTrabajosRowChangeEvent(((CentrosTrabajosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CentrosTrabajosRowDeleted != null)) {
                    this.CentrosTrabajosRowDeleted(this, new CentrosTrabajosRowChangeEvent(((CentrosTrabajosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CentrosTrabajosRowDeleting != null)) {
                    this.CentrosTrabajosRowDeleting(this, new CentrosTrabajosRowChangeEvent(((CentrosTrabajosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCentrosTrabajosRow(CentrosTrabajosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CentrosTrabajosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LineasDataTable : global::System.Data.TypedTableBase<LineasRow> {
            
            private global::System.Data.DataColumn columnLinea;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnDepartamento;
            
            private global::System.Data.DataColumn columnCentroTrabajo;
            
            private global::System.Data.DataColumn columnctDesc;
            
            private global::System.Data.DataColumn columnlinDesc;
            
            private global::System.Data.DataColumn columnFBU;
            
            private global::System.Data.DataColumn columnfbu_desc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LineasDataTable() {
                this.TableName = "Lineas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LineasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LineasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineaColumn {
                get {
                    return this.columnLinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartamentoColumn {
                get {
                    return this.columnDepartamento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CentroTrabajoColumn {
                get {
                    return this.columnCentroTrabajo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ctDescColumn {
                get {
                    return this.columnctDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn linDescColumn {
                get {
                    return this.columnlinDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FBUColumn {
                get {
                    return this.columnFBU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fbu_descColumn {
                get {
                    return this.columnfbu_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LineasRow this[int index] {
                get {
                    return ((LineasRow)(this.Rows[index]));
                }
            }
            
            public event LineasRowChangeEventHandler LineasRowChanging;
            
            public event LineasRowChangeEventHandler LineasRowChanged;
            
            public event LineasRowChangeEventHandler LineasRowDeleting;
            
            public event LineasRowChangeEventHandler LineasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLineasRow(LineasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LineasRow AddLineasRow(string Linea, string Descripcion, string Departamento, string CentroTrabajo, string ctDesc, string linDesc, string FBU, string fbu_desc) {
                LineasRow rowLineasRow = ((LineasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Linea,
                        Descripcion,
                        Departamento,
                        CentroTrabajo,
                        ctDesc,
                        linDesc,
                        FBU,
                        fbu_desc};
                rowLineasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLineasRow);
                return rowLineasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LineasDataTable cln = ((LineasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LineasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLinea = base.Columns["Linea"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnDepartamento = base.Columns["Departamento"];
                this.columnCentroTrabajo = base.Columns["CentroTrabajo"];
                this.columnctDesc = base.Columns["ctDesc"];
                this.columnlinDesc = base.Columns["linDesc"];
                this.columnFBU = base.Columns["FBU"];
                this.columnfbu_desc = base.Columns["fbu_desc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLinea = new global::System.Data.DataColumn("Linea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinea);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnDepartamento = new global::System.Data.DataColumn("Departamento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartamento);
                this.columnCentroTrabajo = new global::System.Data.DataColumn("CentroTrabajo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCentroTrabajo);
                this.columnctDesc = new global::System.Data.DataColumn("ctDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnctDesc);
                this.columnlinDesc = new global::System.Data.DataColumn("linDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlinDesc);
                this.columnFBU = new global::System.Data.DataColumn("FBU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFBU);
                this.columnfbu_desc = new global::System.Data.DataColumn("fbu_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfbu_desc);
                this.columnLinea.MaxLength = 2;
                this.columnDescripcion.MaxLength = 225;
                this.columnDepartamento.MaxLength = 4;
                this.columnCentroTrabajo.MaxLength = 4;
                this.columnctDesc.MaxLength = 50;
                this.columnlinDesc.MaxLength = 225;
                this.columnFBU.MaxLength = 4;
                this.columnfbu_desc.MaxLength = 225;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LineasRow NewLineasRow() {
                return ((LineasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LineasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LineasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LineasRowChanged != null)) {
                    this.LineasRowChanged(this, new LineasRowChangeEvent(((LineasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LineasRowChanging != null)) {
                    this.LineasRowChanging(this, new LineasRowChangeEvent(((LineasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LineasRowDeleted != null)) {
                    this.LineasRowDeleted(this, new LineasRowChangeEvent(((LineasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LineasRowDeleting != null)) {
                    this.LineasRowDeleting(this, new LineasRowChangeEvent(((LineasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLineasRow(LineasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LineasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CodigosDeOperacionDataTable : global::System.Data.TypedTableBase<CodigosDeOperacionRow> {
            
            private global::System.Data.DataColumn columnCodigoOperacion;
            
            private global::System.Data.DataColumn columnCodigoReferencia;
            
            private global::System.Data.DataColumn columnNumeroOperacion;
            
            private global::System.Data.DataColumn columnDescEsp;
            
            private global::System.Data.DataColumn columndeptoDesc;
            
            private global::System.Data.DataColumn columnSystem_Standard;
            
            private global::System.Data.DataColumn columnStandard;
            
            private global::System.Data.DataColumn columnOperadores;
            
            private global::System.Data.DataColumn columnStandard_Group;
            
            private global::System.Data.DataColumn columnMTM;
            
            private global::System.Data.DataColumn columnOracle;
            
            private global::System.Data.DataColumn columnFBU;
            
            private global::System.Data.DataColumn columnfbu_desc;
            
            private global::System.Data.DataColumn columnCentroTrabajo;
            
            private global::System.Data.DataColumn columndesc_ct;
            
            private global::System.Data.DataColumn columnaplicapara;
            
            private global::System.Data.DataColumn columndescIng;
            
            private global::System.Data.DataColumn columnhrs_ing;
            
            private global::System.Data.DataColumn columnproceso;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodigosDeOperacionDataTable() {
                this.TableName = "CodigosDeOperacion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CodigosDeOperacionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CodigosDeOperacionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoOperacionColumn {
                get {
                    return this.columnCodigoOperacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoReferenciaColumn {
                get {
                    return this.columnCodigoReferencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroOperacionColumn {
                get {
                    return this.columnNumeroOperacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescEspColumn {
                get {
                    return this.columnDescEsp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deptoDescColumn {
                get {
                    return this.columndeptoDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn System_StandardColumn {
                get {
                    return this.columnSystem_Standard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardColumn {
                get {
                    return this.columnStandard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperadoresColumn {
                get {
                    return this.columnOperadores;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Standard_GroupColumn {
                get {
                    return this.columnStandard_Group;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MTMColumn {
                get {
                    return this.columnMTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OracleColumn {
                get {
                    return this.columnOracle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FBUColumn {
                get {
                    return this.columnFBU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fbu_descColumn {
                get {
                    return this.columnfbu_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CentroTrabajoColumn {
                get {
                    return this.columnCentroTrabajo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn desc_ctColumn {
                get {
                    return this.columndesc_ct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn aplicaparaColumn {
                get {
                    return this.columnaplicapara;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descIngColumn {
                get {
                    return this.columndescIng;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hrs_ingColumn {
                get {
                    return this.columnhrs_ing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn procesoColumn {
                get {
                    return this.columnproceso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodigosDeOperacionRow this[int index] {
                get {
                    return ((CodigosDeOperacionRow)(this.Rows[index]));
                }
            }
            
            public event CodigosDeOperacionRowChangeEventHandler CodigosDeOperacionRowChanging;
            
            public event CodigosDeOperacionRowChangeEventHandler CodigosDeOperacionRowChanged;
            
            public event CodigosDeOperacionRowChangeEventHandler CodigosDeOperacionRowDeleting;
            
            public event CodigosDeOperacionRowChangeEventHandler CodigosDeOperacionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCodigosDeOperacionRow(CodigosDeOperacionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodigosDeOperacionRow AddCodigosDeOperacionRow(
                        string CodigoOperacion, 
                        string CodigoReferencia, 
                        string NumeroOperacion, 
                        string DescEsp, 
                        string deptoDesc, 
                        double System_Standard, 
                        double Standard, 
                        double Operadores, 
                        double Standard_Group, 
                        string MTM, 
                        string Oracle, 
                        string FBU, 
                        string fbu_desc, 
                        string CentroTrabajo, 
                        string desc_ct, 
                        string aplicapara, 
                        string descIng, 
                        string hrs_ing, 
                        string proceso) {
                CodigosDeOperacionRow rowCodigosDeOperacionRow = ((CodigosDeOperacionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CodigoOperacion,
                        CodigoReferencia,
                        NumeroOperacion,
                        DescEsp,
                        deptoDesc,
                        System_Standard,
                        Standard,
                        Operadores,
                        Standard_Group,
                        MTM,
                        Oracle,
                        FBU,
                        fbu_desc,
                        CentroTrabajo,
                        desc_ct,
                        aplicapara,
                        descIng,
                        hrs_ing,
                        proceso};
                rowCodigosDeOperacionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCodigosDeOperacionRow);
                return rowCodigosDeOperacionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodigosDeOperacionRow FindByCodigoOperacion(string CodigoOperacion) {
                return ((CodigosDeOperacionRow)(this.Rows.Find(new object[] {
                            CodigoOperacion})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CodigosDeOperacionDataTable cln = ((CodigosDeOperacionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CodigosDeOperacionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCodigoOperacion = base.Columns["CodigoOperacion"];
                this.columnCodigoReferencia = base.Columns["CodigoReferencia"];
                this.columnNumeroOperacion = base.Columns["NumeroOperacion"];
                this.columnDescEsp = base.Columns["DescEsp"];
                this.columndeptoDesc = base.Columns["deptoDesc"];
                this.columnSystem_Standard = base.Columns["System_Standard"];
                this.columnStandard = base.Columns["Standard"];
                this.columnOperadores = base.Columns["Operadores"];
                this.columnStandard_Group = base.Columns["Standard_Group"];
                this.columnMTM = base.Columns["MTM"];
                this.columnOracle = base.Columns["Oracle"];
                this.columnFBU = base.Columns["FBU"];
                this.columnfbu_desc = base.Columns["fbu_desc"];
                this.columnCentroTrabajo = base.Columns["CentroTrabajo"];
                this.columndesc_ct = base.Columns["desc_ct"];
                this.columnaplicapara = base.Columns["aplicapara"];
                this.columndescIng = base.Columns["descIng"];
                this.columnhrs_ing = base.Columns["hrs_ing"];
                this.columnproceso = base.Columns["proceso"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCodigoOperacion = new global::System.Data.DataColumn("CodigoOperacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoOperacion);
                this.columnCodigoReferencia = new global::System.Data.DataColumn("CodigoReferencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoReferencia);
                this.columnNumeroOperacion = new global::System.Data.DataColumn("NumeroOperacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroOperacion);
                this.columnDescEsp = new global::System.Data.DataColumn("DescEsp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescEsp);
                this.columndeptoDesc = new global::System.Data.DataColumn("deptoDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeptoDesc);
                this.columnSystem_Standard = new global::System.Data.DataColumn("System_Standard", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystem_Standard);
                this.columnStandard = new global::System.Data.DataColumn("Standard", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandard);
                this.columnOperadores = new global::System.Data.DataColumn("Operadores", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperadores);
                this.columnStandard_Group = new global::System.Data.DataColumn("Standard_Group", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandard_Group);
                this.columnMTM = new global::System.Data.DataColumn("MTM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTM);
                this.columnOracle = new global::System.Data.DataColumn("Oracle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOracle);
                this.columnFBU = new global::System.Data.DataColumn("FBU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFBU);
                this.columnfbu_desc = new global::System.Data.DataColumn("fbu_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfbu_desc);
                this.columnCentroTrabajo = new global::System.Data.DataColumn("CentroTrabajo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCentroTrabajo);
                this.columndesc_ct = new global::System.Data.DataColumn("desc_ct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesc_ct);
                this.columnaplicapara = new global::System.Data.DataColumn("aplicapara", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaplicapara);
                this.columndescIng = new global::System.Data.DataColumn("descIng", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescIng);
                this.columnhrs_ing = new global::System.Data.DataColumn("hrs_ing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhrs_ing);
                this.columnproceso = new global::System.Data.DataColumn("proceso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproceso);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCodigoOperacion}, true));
                this.columnCodigoOperacion.AllowDBNull = false;
                this.columnCodigoOperacion.Unique = true;
                this.columnCodigoOperacion.MaxLength = 7;
                this.columnCodigoReferencia.MaxLength = 15;
                this.columnNumeroOperacion.MaxLength = 4;
                this.columnDescEsp.MaxLength = 225;
                this.columndeptoDesc.MaxLength = 225;
                this.columnMTM.MaxLength = 1;
                this.columnOracle.MaxLength = 4;
                this.columnFBU.MaxLength = 4;
                this.columnfbu_desc.MaxLength = 225;
                this.columnCentroTrabajo.MaxLength = 4;
                this.columndesc_ct.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodigosDeOperacionRow NewCodigosDeOperacionRow() {
                return ((CodigosDeOperacionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CodigosDeOperacionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CodigosDeOperacionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CodigosDeOperacionRowChanged != null)) {
                    this.CodigosDeOperacionRowChanged(this, new CodigosDeOperacionRowChangeEvent(((CodigosDeOperacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CodigosDeOperacionRowChanging != null)) {
                    this.CodigosDeOperacionRowChanging(this, new CodigosDeOperacionRowChangeEvent(((CodigosDeOperacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CodigosDeOperacionRowDeleted != null)) {
                    this.CodigosDeOperacionRowDeleted(this, new CodigosDeOperacionRowChangeEvent(((CodigosDeOperacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CodigosDeOperacionRowDeleting != null)) {
                    this.CodigosDeOperacionRowDeleting(this, new CodigosDeOperacionRowChangeEvent(((CodigosDeOperacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCodigosDeOperacionRow(CodigosDeOperacionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CodigosDeOperacionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vouchersDataTable : global::System.Data.TypedTableBase<vouchersRow> {
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnTurno;
            
            private global::System.Data.DataColumn columnSupervisor;
            
            private global::System.Data.DataColumn columnEmpezo;
            
            private global::System.Data.DataColumn columnTermino;
            
            private global::System.Data.DataColumn columnCodigoOperacion;
            
            private global::System.Data.DataColumn columnHoras;
            
            private global::System.Data.DataColumn columnProdTotal;
            
            private global::System.Data.DataColumn columnProduccion;
            
            private global::System.Data.DataColumn columnnumempl;
            
            private global::System.Data.DataColumn columnnombEmpl;
            
            private global::System.Data.DataColumn columnDescCodOp;
            
            private global::System.Data.DataColumn columnEficiencia;
            
            private global::System.Data.DataColumn columnLinea;
            
            private global::System.Data.DataColumn columnFBU;
            
            private global::System.Data.DataColumn columnfbu_desc;
            
            private global::System.Data.DataColumn columndepartamento;
            
            private global::System.Data.DataColumn columncentrotrabajo;
            
            private global::System.Data.DataColumn columncoordinador;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vouchersDataTable() {
                this.TableName = "vouchers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vouchersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vouchersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TurnoColumn {
                get {
                    return this.columnTurno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupervisorColumn {
                get {
                    return this.columnSupervisor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpezoColumn {
                get {
                    return this.columnEmpezo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TerminoColumn {
                get {
                    return this.columnTermino;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoOperacionColumn {
                get {
                    return this.columnCodigoOperacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HorasColumn {
                get {
                    return this.columnHoras;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProdTotalColumn {
                get {
                    return this.columnProdTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProduccionColumn {
                get {
                    return this.columnProduccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numemplColumn {
                get {
                    return this.columnnumempl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombEmplColumn {
                get {
                    return this.columnnombEmpl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescCodOpColumn {
                get {
                    return this.columnDescCodOp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EficienciaColumn {
                get {
                    return this.columnEficiencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineaColumn {
                get {
                    return this.columnLinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FBUColumn {
                get {
                    return this.columnFBU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fbu_descColumn {
                get {
                    return this.columnfbu_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn departamentoColumn {
                get {
                    return this.columndepartamento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn centrotrabajoColumn {
                get {
                    return this.columncentrotrabajo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coordinadorColumn {
                get {
                    return this.columncoordinador;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vouchersRow this[int index] {
                get {
                    return ((vouchersRow)(this.Rows[index]));
                }
            }
            
            public event vouchersRowChangeEventHandler vouchersRowChanging;
            
            public event vouchersRowChangeEventHandler vouchersRowChanged;
            
            public event vouchersRowChangeEventHandler vouchersRowDeleting;
            
            public event vouchersRowChangeEventHandler vouchersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvouchersRow(vouchersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vouchersRow AddvouchersRow(
                        System.DateTime Fecha, 
                        short Turno, 
                        string Supervisor, 
                        string Empezo, 
                        string Termino, 
                        string CodigoOperacion, 
                        double Horas, 
                        int ProdTotal, 
                        double Produccion, 
                        int numempl, 
                        string nombEmpl, 
                        string DescCodOp, 
                        double Eficiencia, 
                        string Linea, 
                        string FBU, 
                        string fbu_desc, 
                        string departamento, 
                        string centrotrabajo, 
                        string coordinador) {
                vouchersRow rowvouchersRow = ((vouchersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Fecha,
                        Turno,
                        Supervisor,
                        Empezo,
                        Termino,
                        CodigoOperacion,
                        Horas,
                        ProdTotal,
                        Produccion,
                        numempl,
                        nombEmpl,
                        DescCodOp,
                        Eficiencia,
                        Linea,
                        FBU,
                        fbu_desc,
                        departamento,
                        centrotrabajo,
                        coordinador};
                rowvouchersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvouchersRow);
                return rowvouchersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                vouchersDataTable cln = ((vouchersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vouchersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFecha = base.Columns["Fecha"];
                this.columnTurno = base.Columns["Turno"];
                this.columnSupervisor = base.Columns["Supervisor"];
                this.columnEmpezo = base.Columns["Empezo"];
                this.columnTermino = base.Columns["Termino"];
                this.columnCodigoOperacion = base.Columns["CodigoOperacion"];
                this.columnHoras = base.Columns["Horas"];
                this.columnProdTotal = base.Columns["ProdTotal"];
                this.columnProduccion = base.Columns["Produccion"];
                this.columnnumempl = base.Columns["numempl"];
                this.columnnombEmpl = base.Columns["nombEmpl"];
                this.columnDescCodOp = base.Columns["DescCodOp"];
                this.columnEficiencia = base.Columns["Eficiencia"];
                this.columnLinea = base.Columns["Linea"];
                this.columnFBU = base.Columns["FBU"];
                this.columnfbu_desc = base.Columns["fbu_desc"];
                this.columndepartamento = base.Columns["departamento"];
                this.columncentrotrabajo = base.Columns["centrotrabajo"];
                this.columncoordinador = base.Columns["coordinador"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnTurno = new global::System.Data.DataColumn("Turno", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTurno);
                this.columnSupervisor = new global::System.Data.DataColumn("Supervisor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisor);
                this.columnEmpezo = new global::System.Data.DataColumn("Empezo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpezo);
                this.columnTermino = new global::System.Data.DataColumn("Termino", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermino);
                this.columnCodigoOperacion = new global::System.Data.DataColumn("CodigoOperacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoOperacion);
                this.columnHoras = new global::System.Data.DataColumn("Horas", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoras);
                this.columnProdTotal = new global::System.Data.DataColumn("ProdTotal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProdTotal);
                this.columnProduccion = new global::System.Data.DataColumn("Produccion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduccion);
                this.columnnumempl = new global::System.Data.DataColumn("numempl", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumempl);
                this.columnnombEmpl = new global::System.Data.DataColumn("nombEmpl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombEmpl);
                this.columnDescCodOp = new global::System.Data.DataColumn("DescCodOp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescCodOp);
                this.columnEficiencia = new global::System.Data.DataColumn("Eficiencia", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEficiencia);
                this.columnLinea = new global::System.Data.DataColumn("Linea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinea);
                this.columnFBU = new global::System.Data.DataColumn("FBU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFBU);
                this.columnfbu_desc = new global::System.Data.DataColumn("fbu_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfbu_desc);
                this.columndepartamento = new global::System.Data.DataColumn("departamento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartamento);
                this.columncentrotrabajo = new global::System.Data.DataColumn("centrotrabajo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncentrotrabajo);
                this.columncoordinador = new global::System.Data.DataColumn("coordinador", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoordinador);
                this.columnSupervisor.MaxLength = 50;
                this.columnEmpezo.MaxLength = 5;
                this.columnTermino.MaxLength = 5;
                this.columnCodigoOperacion.MaxLength = 7;
                this.columnnombEmpl.MaxLength = 70;
                this.columnDescCodOp.MaxLength = 225;
                this.columnLinea.MaxLength = 2;
                this.columnFBU.MaxLength = 4;
                this.columnfbu_desc.MaxLength = 225;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vouchersRow NewvouchersRow() {
                return ((vouchersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vouchersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(vouchersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vouchersRowChanged != null)) {
                    this.vouchersRowChanged(this, new vouchersRowChangeEvent(((vouchersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vouchersRowChanging != null)) {
                    this.vouchersRowChanging(this, new vouchersRowChangeEvent(((vouchersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vouchersRowDeleted != null)) {
                    this.vouchersRowDeleted(this, new vouchersRowChangeEvent(((vouchersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vouchersRowDeleting != null)) {
                    this.vouchersRowDeleting(this, new vouchersRowChangeEvent(((vouchersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevouchersRow(vouchersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vouchersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lstLineasDataTable : global::System.Data.TypedTableBase<lstLineasRow> {
            
            private global::System.Data.DataColumn columnLinea;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstLineasDataTable() {
                this.TableName = "lstLineas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lstLineasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected lstLineasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineaColumn {
                get {
                    return this.columnLinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstLineasRow this[int index] {
                get {
                    return ((lstLineasRow)(this.Rows[index]));
                }
            }
            
            public event lstLineasRowChangeEventHandler lstLineasRowChanging;
            
            public event lstLineasRowChangeEventHandler lstLineasRowChanged;
            
            public event lstLineasRowChangeEventHandler lstLineasRowDeleting;
            
            public event lstLineasRowChangeEventHandler lstLineasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddlstLineasRow(lstLineasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstLineasRow AddlstLineasRow(string Linea, string Descripcion) {
                lstLineasRow rowlstLineasRow = ((lstLineasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Linea,
                        Descripcion};
                rowlstLineasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlstLineasRow);
                return rowlstLineasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                lstLineasDataTable cln = ((lstLineasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lstLineasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLinea = base.Columns["Linea"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLinea = new global::System.Data.DataColumn("Linea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinea);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnLinea.MaxLength = 2;
                this.columnDescripcion.MaxLength = 225;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstLineasRow NewlstLineasRow() {
                return ((lstLineasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lstLineasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(lstLineasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lstLineasRowChanged != null)) {
                    this.lstLineasRowChanged(this, new lstLineasRowChangeEvent(((lstLineasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lstLineasRowChanging != null)) {
                    this.lstLineasRowChanging(this, new lstLineasRowChangeEvent(((lstLineasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lstLineasRowDeleted != null)) {
                    this.lstLineasRowDeleted(this, new lstLineasRowChangeEvent(((lstLineasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lstLineasRowDeleting != null)) {
                    this.lstLineasRowDeleting(this, new lstLineasRowChangeEvent(((lstLineasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovelstLineasRow(lstLineasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lstLineasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmpleadosDataTable : global::System.Data.TypedTableBase<EmpleadosRow> {
            
            private global::System.Data.DataColumn columnEmpleado;
            
            private global::System.Data.DataColumn columnNombre;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmpleadosDataTable() {
                this.TableName = "Empleados";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmpleadosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EmpleadosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpleadoColumn {
                get {
                    return this.columnEmpleado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmpleadosRow this[int index] {
                get {
                    return ((EmpleadosRow)(this.Rows[index]));
                }
            }
            
            public event EmpleadosRowChangeEventHandler EmpleadosRowChanging;
            
            public event EmpleadosRowChangeEventHandler EmpleadosRowChanged;
            
            public event EmpleadosRowChangeEventHandler EmpleadosRowDeleting;
            
            public event EmpleadosRowChangeEventHandler EmpleadosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEmpleadosRow(EmpleadosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmpleadosRow AddEmpleadosRow(int Empleado, string Nombre) {
                EmpleadosRow rowEmpleadosRow = ((EmpleadosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Empleado,
                        Nombre};
                rowEmpleadosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmpleadosRow);
                return rowEmpleadosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EmpleadosDataTable cln = ((EmpleadosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmpleadosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpleado = base.Columns["Empleado"];
                this.columnNombre = base.Columns["Nombre"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpleado = new global::System.Data.DataColumn("Empleado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpleado);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnNombre.MaxLength = 70;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmpleadosRow NewEmpleadosRow() {
                return ((EmpleadosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmpleadosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EmpleadosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmpleadosRowChanged != null)) {
                    this.EmpleadosRowChanged(this, new EmpleadosRowChangeEvent(((EmpleadosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmpleadosRowChanging != null)) {
                    this.EmpleadosRowChanging(this, new EmpleadosRowChangeEvent(((EmpleadosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmpleadosRowDeleted != null)) {
                    this.EmpleadosRowDeleted(this, new EmpleadosRowChangeEvent(((EmpleadosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmpleadosRowDeleting != null)) {
                    this.EmpleadosRowDeleting(this, new EmpleadosRowChangeEvent(((EmpleadosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEmpleadosRow(EmpleadosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmpleadosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lstCodDirDataTable : global::System.Data.TypedTableBase<lstCodDirRow> {
            
            private global::System.Data.DataColumn columnTurno;
            
            private global::System.Data.DataColumn columnDepartamento;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnDHoras;
            
            private global::System.Data.DataColumn columnHEarned;
            
            private global::System.Data.DataColumn columnEficiencia;
            
            private global::System.Data.DataColumn columnProductivity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodDirDataTable() {
                this.TableName = "lstCodDir";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lstCodDirDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected lstCodDirDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TurnoColumn {
                get {
                    return this.columnTurno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartamentoColumn {
                get {
                    return this.columnDepartamento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DHorasColumn {
                get {
                    return this.columnDHoras;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HEarnedColumn {
                get {
                    return this.columnHEarned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EficienciaColumn {
                get {
                    return this.columnEficiencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductivityColumn {
                get {
                    return this.columnProductivity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodDirRow this[int index] {
                get {
                    return ((lstCodDirRow)(this.Rows[index]));
                }
            }
            
            public event lstCodDirRowChangeEventHandler lstCodDirRowChanging;
            
            public event lstCodDirRowChangeEventHandler lstCodDirRowChanged;
            
            public event lstCodDirRowChangeEventHandler lstCodDirRowDeleting;
            
            public event lstCodDirRowChangeEventHandler lstCodDirRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddlstCodDirRow(lstCodDirRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodDirRow AddlstCodDirRow(short Turno, string Departamento, string Descripcion, double DHoras, double HEarned, double Eficiencia, double Productivity) {
                lstCodDirRow rowlstCodDirRow = ((lstCodDirRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Turno,
                        Departamento,
                        Descripcion,
                        DHoras,
                        HEarned,
                        Eficiencia,
                        Productivity};
                rowlstCodDirRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlstCodDirRow);
                return rowlstCodDirRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                lstCodDirDataTable cln = ((lstCodDirDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lstCodDirDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTurno = base.Columns["Turno"];
                this.columnDepartamento = base.Columns["Departamento"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnDHoras = base.Columns["DHoras"];
                this.columnHEarned = base.Columns["HEarned"];
                this.columnEficiencia = base.Columns["Eficiencia"];
                this.columnProductivity = base.Columns["Productivity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTurno = new global::System.Data.DataColumn("Turno", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTurno);
                this.columnDepartamento = new global::System.Data.DataColumn("Departamento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartamento);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnDHoras = new global::System.Data.DataColumn("DHoras", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDHoras);
                this.columnHEarned = new global::System.Data.DataColumn("HEarned", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHEarned);
                this.columnEficiencia = new global::System.Data.DataColumn("Eficiencia", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEficiencia);
                this.columnProductivity = new global::System.Data.DataColumn("Productivity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductivity);
                this.columnDepartamento.MaxLength = 4;
                this.columnDescripcion.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodDirRow NewlstCodDirRow() {
                return ((lstCodDirRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lstCodDirRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(lstCodDirRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lstCodDirRowChanged != null)) {
                    this.lstCodDirRowChanged(this, new lstCodDirRowChangeEvent(((lstCodDirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lstCodDirRowChanging != null)) {
                    this.lstCodDirRowChanging(this, new lstCodDirRowChangeEvent(((lstCodDirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lstCodDirRowDeleted != null)) {
                    this.lstCodDirRowDeleted(this, new lstCodDirRowChangeEvent(((lstCodDirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lstCodDirRowDeleting != null)) {
                    this.lstCodDirRowDeleting(this, new lstCodDirRowChangeEvent(((lstCodDirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovelstCodDirRow(lstCodDirRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lstCodDirDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lstCodIndDataTable : global::System.Data.TypedTableBase<lstCodIndRow> {
            
            private global::System.Data.DataColumn columnDepartamento;
            
            private global::System.Data.DataColumn columnDHoras;
            
            private global::System.Data.DataColumn columnConsecutivo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodIndDataTable() {
                this.TableName = "lstCodInd";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lstCodIndDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected lstCodIndDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartamentoColumn {
                get {
                    return this.columnDepartamento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DHorasColumn {
                get {
                    return this.columnDHoras;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsecutivoColumn {
                get {
                    return this.columnConsecutivo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodIndRow this[int index] {
                get {
                    return ((lstCodIndRow)(this.Rows[index]));
                }
            }
            
            public event lstCodIndRowChangeEventHandler lstCodIndRowChanging;
            
            public event lstCodIndRowChangeEventHandler lstCodIndRowChanged;
            
            public event lstCodIndRowChangeEventHandler lstCodIndRowDeleting;
            
            public event lstCodIndRowChangeEventHandler lstCodIndRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddlstCodIndRow(lstCodIndRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodIndRow AddlstCodIndRow(string Departamento, double DHoras, string Consecutivo) {
                lstCodIndRow rowlstCodIndRow = ((lstCodIndRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Departamento,
                        DHoras,
                        Consecutivo};
                rowlstCodIndRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlstCodIndRow);
                return rowlstCodIndRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                lstCodIndDataTable cln = ((lstCodIndDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lstCodIndDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDepartamento = base.Columns["Departamento"];
                this.columnDHoras = base.Columns["DHoras"];
                this.columnConsecutivo = base.Columns["Consecutivo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDepartamento = new global::System.Data.DataColumn("Departamento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartamento);
                this.columnDHoras = new global::System.Data.DataColumn("DHoras", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDHoras);
                this.columnConsecutivo = new global::System.Data.DataColumn("Consecutivo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsecutivo);
                this.columnDepartamento.MaxLength = 4;
                this.columnConsecutivo.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodIndRow NewlstCodIndRow() {
                return ((lstCodIndRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lstCodIndRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(lstCodIndRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lstCodIndRowChanged != null)) {
                    this.lstCodIndRowChanged(this, new lstCodIndRowChangeEvent(((lstCodIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lstCodIndRowChanging != null)) {
                    this.lstCodIndRowChanging(this, new lstCodIndRowChangeEvent(((lstCodIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lstCodIndRowDeleted != null)) {
                    this.lstCodIndRowDeleted(this, new lstCodIndRowChangeEvent(((lstCodIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lstCodIndRowDeleting != null)) {
                    this.lstCodIndRowDeleting(this, new lstCodIndRowChangeEvent(((lstCodIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovelstCodIndRow(lstCodIndRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lstCodIndDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lstFbusDataTable : global::System.Data.TypedTableBase<lstFbusRow> {
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnFBU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstFbusDataTable() {
                this.TableName = "lstFbus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lstFbusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected lstFbusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FBUColumn {
                get {
                    return this.columnFBU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstFbusRow this[int index] {
                get {
                    return ((lstFbusRow)(this.Rows[index]));
                }
            }
            
            public event lstFbusRowChangeEventHandler lstFbusRowChanging;
            
            public event lstFbusRowChangeEventHandler lstFbusRowChanged;
            
            public event lstFbusRowChangeEventHandler lstFbusRowDeleting;
            
            public event lstFbusRowChangeEventHandler lstFbusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddlstFbusRow(lstFbusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstFbusRow AddlstFbusRow(string Descripcion, string FBU) {
                lstFbusRow rowlstFbusRow = ((lstFbusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Descripcion,
                        FBU};
                rowlstFbusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlstFbusRow);
                return rowlstFbusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                lstFbusDataTable cln = ((lstFbusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lstFbusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnFBU = base.Columns["FBU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnFBU = new global::System.Data.DataColumn("FBU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFBU);
                this.columnDescripcion.MaxLength = 225;
                this.columnFBU.MaxLength = 4;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstFbusRow NewlstFbusRow() {
                return ((lstFbusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lstFbusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(lstFbusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lstFbusRowChanged != null)) {
                    this.lstFbusRowChanged(this, new lstFbusRowChangeEvent(((lstFbusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lstFbusRowChanging != null)) {
                    this.lstFbusRowChanging(this, new lstFbusRowChangeEvent(((lstFbusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lstFbusRowDeleted != null)) {
                    this.lstFbusRowDeleted(this, new lstFbusRowChangeEvent(((lstFbusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lstFbusRowDeleting != null)) {
                    this.lstFbusRowDeleting(this, new lstFbusRowChangeEvent(((lstFbusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovelstFbusRow(lstFbusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lstFbusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SupervisoresDataTable : global::System.Data.TypedTableBase<SupervisoresRow> {
            
            private global::System.Data.DataColumn columnSupervisor;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnID_Coordinador;
            
            private global::System.Data.DataColumn columnNombre_coord;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupervisoresDataTable() {
                this.TableName = "Supervisores";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SupervisoresDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SupervisoresDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupervisorColumn {
                get {
                    return this.columnSupervisor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_CoordinadorColumn {
                get {
                    return this.columnID_Coordinador;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nombre_coordColumn {
                get {
                    return this.columnNombre_coord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupervisoresRow this[int index] {
                get {
                    return ((SupervisoresRow)(this.Rows[index]));
                }
            }
            
            public event SupervisoresRowChangeEventHandler SupervisoresRowChanging;
            
            public event SupervisoresRowChangeEventHandler SupervisoresRowChanged;
            
            public event SupervisoresRowChangeEventHandler SupervisoresRowDeleting;
            
            public event SupervisoresRowChangeEventHandler SupervisoresRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSupervisoresRow(SupervisoresRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupervisoresRow AddSupervisoresRow(string Supervisor, string Nombre, string ID_Coordinador, string Nombre_coord) {
                SupervisoresRow rowSupervisoresRow = ((SupervisoresRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Supervisor,
                        Nombre,
                        ID_Coordinador,
                        Nombre_coord};
                rowSupervisoresRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSupervisoresRow);
                return rowSupervisoresRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SupervisoresDataTable cln = ((SupervisoresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SupervisoresDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSupervisor = base.Columns["Supervisor"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnID_Coordinador = base.Columns["ID_Coordinador"];
                this.columnNombre_coord = base.Columns["Nombre_coord"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSupervisor = new global::System.Data.DataColumn("Supervisor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisor);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnID_Coordinador = new global::System.Data.DataColumn("ID_Coordinador", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Coordinador);
                this.columnNombre_coord = new global::System.Data.DataColumn("Nombre_coord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre_coord);
                this.columnSupervisor.MaxLength = 2;
                this.columnNombre.MaxLength = 50;
                this.columnID_Coordinador.MaxLength = 2;
                this.columnNombre_coord.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupervisoresRow NewSupervisoresRow() {
                return ((SupervisoresRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SupervisoresRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SupervisoresRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SupervisoresRowChanged != null)) {
                    this.SupervisoresRowChanged(this, new SupervisoresRowChangeEvent(((SupervisoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SupervisoresRowChanging != null)) {
                    this.SupervisoresRowChanging(this, new SupervisoresRowChangeEvent(((SupervisoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SupervisoresRowDeleted != null)) {
                    this.SupervisoresRowDeleted(this, new SupervisoresRowChangeEvent(((SupervisoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SupervisoresRowDeleting != null)) {
                    this.SupervisoresRowDeleting(this, new SupervisoresRowChangeEvent(((SupervisoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSupervisoresRow(SupervisoresRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SupervisoresDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class efByDeptoDataTable : global::System.Data.TypedTableBase<efByDeptoRow> {
            
            private global::System.Data.DataColumn columndepto;
            
            private global::System.Data.DataColumn columnDescr;
            
            private global::System.Data.DataColumn columnTurno;
            
            private global::System.Data.DataColumn columnhEarn;
            
            private global::System.Data.DataColumn columndHrs;
            
            private global::System.Data.DataColumn columnef;
            
            private global::System.Data.DataColumn columnProduc;
            
            private global::System.Data.DataColumn column0080;
            
            private global::System.Data.DataColumn column0081;
            
            private global::System.Data.DataColumn column0082;
            
            private global::System.Data.DataColumn column0083;
            
            private global::System.Data.DataColumn column0084;
            
            private global::System.Data.DataColumn column0085;
            
            private global::System.Data.DataColumn column0086;
            
            private global::System.Data.DataColumn column0087;
            
            private global::System.Data.DataColumn column0088;
            
            private global::System.Data.DataColumn column0089;
            
            private global::System.Data.DataColumn column0090;
            
            private global::System.Data.DataColumn column0091;
            
            private global::System.Data.DataColumn column0092;
            
            private global::System.Data.DataColumn column0093;
            
            private global::System.Data.DataColumn column0094;
            
            private global::System.Data.DataColumn column0095;
            
            private global::System.Data.DataColumn column0096;
            
            private global::System.Data.DataColumn column0097;
            
            private global::System.Data.DataColumn columnHI;
            
            private global::System.Data.DataColumn columnHT;
            
            private global::System.Data.DataColumn columnUtil;
            
            private global::System.Data.DataColumn columnct;
            
            private global::System.Data.DataColumn columnlinea;
            
            private global::System.Data.DataColumn columncodigooperacion;
            
            private global::System.Data.DataColumn columncodOpEmp;
            
            private global::System.Data.DataColumn columnemp;
            
            private global::System.Data.DataColumn columnsup;
            
            private global::System.Data.DataColumn columnFbu;
            
            private global::System.Data.DataColumn columnfbuDesc;
            
            private global::System.Data.DataColumn columnlineaDesc;
            
            private global::System.Data.DataColumn columncoDesc;
            
            private global::System.Data.DataColumn columndeptoDesc;
            
            private global::System.Data.DataColumn columnnumEmp;
            
            private global::System.Data.DataColumn columnoverhead;
            
            private global::System.Data.DataColumn columnFecha;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public efByDeptoDataTable() {
                this.TableName = "efByDepto";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal efByDeptoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected efByDeptoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deptoColumn {
                get {
                    return this.columndepto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescrColumn {
                get {
                    return this.columnDescr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TurnoColumn {
                get {
                    return this.columnTurno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hEarnColumn {
                get {
                    return this.columnhEarn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dHrsColumn {
                get {
                    return this.columndHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn efColumn {
                get {
                    return this.columnef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProducColumn {
                get {
                    return this.columnProduc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0080Column {
                get {
                    return this.column0080;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0081Column {
                get {
                    return this.column0081;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0082Column {
                get {
                    return this.column0082;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0083Column {
                get {
                    return this.column0083;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0084Column {
                get {
                    return this.column0084;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0085Column {
                get {
                    return this.column0085;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0086Column {
                get {
                    return this.column0086;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0087Column {
                get {
                    return this.column0087;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0088Column {
                get {
                    return this.column0088;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0089Column {
                get {
                    return this.column0089;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0090Column {
                get {
                    return this.column0090;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0091Column {
                get {
                    return this.column0091;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0092Column {
                get {
                    return this.column0092;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0093Column {
                get {
                    return this.column0093;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0094Column {
                get {
                    return this.column0094;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0095Column {
                get {
                    return this.column0095;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0096Column {
                get {
                    return this.column0096;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0097Column {
                get {
                    return this.column0097;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIColumn {
                get {
                    return this.columnHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HTColumn {
                get {
                    return this.columnHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilColumn {
                get {
                    return this.columnUtil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ctColumn {
                get {
                    return this.columnct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lineaColumn {
                get {
                    return this.columnlinea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codigooperacionColumn {
                get {
                    return this.columncodigooperacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codOpEmpColumn {
                get {
                    return this.columncodOpEmp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empColumn {
                get {
                    return this.columnemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn supColumn {
                get {
                    return this.columnsup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FbuColumn {
                get {
                    return this.columnFbu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fbuDescColumn {
                get {
                    return this.columnfbuDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lineaDescColumn {
                get {
                    return this.columnlineaDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coDescColumn {
                get {
                    return this.columncoDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deptoDescColumn {
                get {
                    return this.columndeptoDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numEmpColumn {
                get {
                    return this.columnnumEmp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn overheadColumn {
                get {
                    return this.columnoverhead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public efByDeptoRow this[int index] {
                get {
                    return ((efByDeptoRow)(this.Rows[index]));
                }
            }
            
            public event efByDeptoRowChangeEventHandler efByDeptoRowChanging;
            
            public event efByDeptoRowChangeEventHandler efByDeptoRowChanged;
            
            public event efByDeptoRowChangeEventHandler efByDeptoRowDeleting;
            
            public event efByDeptoRowChangeEventHandler efByDeptoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddefByDeptoRow(efByDeptoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public efByDeptoRow AddefByDeptoRow(
                        string depto, 
                        string Descr, 
                        string Turno, 
                        string hEarn, 
                        string dHrs, 
                        string ef, 
                        string Produc, 
                        string _0080, 
                        string _0081, 
                        string _0082, 
                        string _0083, 
                        string _0084, 
                        string _0085, 
                        string _0086, 
                        string _0087, 
                        string _0088, 
                        string _0089, 
                        string _0090, 
                        string _0091, 
                        string _0092, 
                        string _0093, 
                        string _0094, 
                        string _0095, 
                        string _0096, 
                        string _0097, 
                        string HI, 
                        string HT, 
                        double Util, 
                        string ct, 
                        string linea, 
                        string codigooperacion, 
                        string codOpEmp, 
                        string emp, 
                        string sup, 
                        string Fbu, 
                        string fbuDesc, 
                        string lineaDesc, 
                        string coDesc, 
                        string deptoDesc, 
                        string numEmp, 
                        string overhead, 
                        string Fecha) {
                efByDeptoRow rowefByDeptoRow = ((efByDeptoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        depto,
                        Descr,
                        Turno,
                        hEarn,
                        dHrs,
                        ef,
                        Produc,
                        _0080,
                        _0081,
                        _0082,
                        _0083,
                        _0084,
                        _0085,
                        _0086,
                        _0087,
                        _0088,
                        _0089,
                        _0090,
                        _0091,
                        _0092,
                        _0093,
                        _0094,
                        _0095,
                        _0096,
                        _0097,
                        HI,
                        HT,
                        Util,
                        ct,
                        linea,
                        codigooperacion,
                        codOpEmp,
                        emp,
                        sup,
                        Fbu,
                        fbuDesc,
                        lineaDesc,
                        coDesc,
                        deptoDesc,
                        numEmp,
                        overhead,
                        Fecha};
                rowefByDeptoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowefByDeptoRow);
                return rowefByDeptoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                efByDeptoDataTable cln = ((efByDeptoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new efByDeptoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndepto = base.Columns["depto"];
                this.columnDescr = base.Columns["Descr"];
                this.columnTurno = base.Columns["Turno"];
                this.columnhEarn = base.Columns["hEarn"];
                this.columndHrs = base.Columns["dHrs"];
                this.columnef = base.Columns["ef"];
                this.columnProduc = base.Columns["Produc"];
                this.column0080 = base.Columns["0080"];
                this.column0081 = base.Columns["0081"];
                this.column0082 = base.Columns["0082"];
                this.column0083 = base.Columns["0083"];
                this.column0084 = base.Columns["0084"];
                this.column0085 = base.Columns["0085"];
                this.column0086 = base.Columns["0086"];
                this.column0087 = base.Columns["0087"];
                this.column0088 = base.Columns["0088"];
                this.column0089 = base.Columns["0089"];
                this.column0090 = base.Columns["0090"];
                this.column0091 = base.Columns["0091"];
                this.column0092 = base.Columns["0092"];
                this.column0093 = base.Columns["0093"];
                this.column0094 = base.Columns["0094"];
                this.column0095 = base.Columns["0095"];
                this.column0096 = base.Columns["0096"];
                this.column0097 = base.Columns["0097"];
                this.columnHI = base.Columns["HI"];
                this.columnHT = base.Columns["HT"];
                this.columnUtil = base.Columns["Util"];
                this.columnct = base.Columns["ct"];
                this.columnlinea = base.Columns["linea"];
                this.columncodigooperacion = base.Columns["codigooperacion"];
                this.columncodOpEmp = base.Columns["codOpEmp"];
                this.columnemp = base.Columns["emp"];
                this.columnsup = base.Columns["sup"];
                this.columnFbu = base.Columns["Fbu"];
                this.columnfbuDesc = base.Columns["fbuDesc"];
                this.columnlineaDesc = base.Columns["lineaDesc"];
                this.columncoDesc = base.Columns["coDesc"];
                this.columndeptoDesc = base.Columns["deptoDesc"];
                this.columnnumEmp = base.Columns["numEmp"];
                this.columnoverhead = base.Columns["overhead"];
                this.columnFecha = base.Columns["Fecha"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndepto = new global::System.Data.DataColumn("depto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepto);
                this.columnDescr = new global::System.Data.DataColumn("Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescr);
                this.columnTurno = new global::System.Data.DataColumn("Turno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTurno);
                this.columnhEarn = new global::System.Data.DataColumn("hEarn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhEarn);
                this.columndHrs = new global::System.Data.DataColumn("dHrs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndHrs);
                this.columnef = new global::System.Data.DataColumn("ef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnef);
                this.columnProduc = new global::System.Data.DataColumn("Produc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduc);
                this.column0080 = new global::System.Data.DataColumn("0080", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0080.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0080");
                this.column0080.ExtendedProperties.Add("Generator_UserColumnName", "0080");
                base.Columns.Add(this.column0080);
                this.column0081 = new global::System.Data.DataColumn("0081", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0081.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0081");
                this.column0081.ExtendedProperties.Add("Generator_UserColumnName", "0081");
                base.Columns.Add(this.column0081);
                this.column0082 = new global::System.Data.DataColumn("0082", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0082.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0082");
                this.column0082.ExtendedProperties.Add("Generator_UserColumnName", "0082");
                base.Columns.Add(this.column0082);
                this.column0083 = new global::System.Data.DataColumn("0083", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0083.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0083");
                this.column0083.ExtendedProperties.Add("Generator_UserColumnName", "0083");
                base.Columns.Add(this.column0083);
                this.column0084 = new global::System.Data.DataColumn("0084", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0084.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0084");
                this.column0084.ExtendedProperties.Add("Generator_UserColumnName", "0084");
                base.Columns.Add(this.column0084);
                this.column0085 = new global::System.Data.DataColumn("0085", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0085.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0085");
                this.column0085.ExtendedProperties.Add("Generator_UserColumnName", "0085");
                base.Columns.Add(this.column0085);
                this.column0086 = new global::System.Data.DataColumn("0086", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0086.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0086");
                this.column0086.ExtendedProperties.Add("Generator_UserColumnName", "0086");
                base.Columns.Add(this.column0086);
                this.column0087 = new global::System.Data.DataColumn("0087", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0087.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0087");
                this.column0087.ExtendedProperties.Add("Generator_UserColumnName", "0087");
                base.Columns.Add(this.column0087);
                this.column0088 = new global::System.Data.DataColumn("0088", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0088.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0088");
                this.column0088.ExtendedProperties.Add("Generator_UserColumnName", "0088");
                base.Columns.Add(this.column0088);
                this.column0089 = new global::System.Data.DataColumn("0089", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0089.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0089");
                this.column0089.ExtendedProperties.Add("Generator_UserColumnName", "0089");
                base.Columns.Add(this.column0089);
                this.column0090 = new global::System.Data.DataColumn("0090", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0090.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0090");
                this.column0090.ExtendedProperties.Add("Generator_UserColumnName", "0090");
                base.Columns.Add(this.column0090);
                this.column0091 = new global::System.Data.DataColumn("0091", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0091.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0091");
                this.column0091.ExtendedProperties.Add("Generator_UserColumnName", "0091");
                base.Columns.Add(this.column0091);
                this.column0092 = new global::System.Data.DataColumn("0092", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0092.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0092");
                this.column0092.ExtendedProperties.Add("Generator_UserColumnName", "0092");
                base.Columns.Add(this.column0092);
                this.column0093 = new global::System.Data.DataColumn("0093", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0093.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0093");
                this.column0093.ExtendedProperties.Add("Generator_UserColumnName", "0093");
                base.Columns.Add(this.column0093);
                this.column0094 = new global::System.Data.DataColumn("0094", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0094.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0094");
                this.column0094.ExtendedProperties.Add("Generator_UserColumnName", "0094");
                base.Columns.Add(this.column0094);
                this.column0095 = new global::System.Data.DataColumn("0095", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0095.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0095");
                this.column0095.ExtendedProperties.Add("Generator_UserColumnName", "0095");
                base.Columns.Add(this.column0095);
                this.column0096 = new global::System.Data.DataColumn("0096", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0096.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0096");
                this.column0096.ExtendedProperties.Add("Generator_UserColumnName", "0096");
                base.Columns.Add(this.column0096);
                this.column0097 = new global::System.Data.DataColumn("0097", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0097.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0097");
                this.column0097.ExtendedProperties.Add("Generator_UserColumnName", "0097");
                base.Columns.Add(this.column0097);
                this.columnHI = new global::System.Data.DataColumn("HI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHI);
                this.columnHT = new global::System.Data.DataColumn("HT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHT);
                this.columnUtil = new global::System.Data.DataColumn("Util", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtil);
                this.columnct = new global::System.Data.DataColumn("ct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnct);
                this.columnlinea = new global::System.Data.DataColumn("linea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlinea);
                this.columncodigooperacion = new global::System.Data.DataColumn("codigooperacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodigooperacion);
                this.columncodOpEmp = new global::System.Data.DataColumn("codOpEmp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodOpEmp);
                this.columnemp = new global::System.Data.DataColumn("emp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemp);
                this.columnsup = new global::System.Data.DataColumn("sup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsup);
                this.columnFbu = new global::System.Data.DataColumn("Fbu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFbu);
                this.columnfbuDesc = new global::System.Data.DataColumn("fbuDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfbuDesc);
                this.columnlineaDesc = new global::System.Data.DataColumn("lineaDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlineaDesc);
                this.columncoDesc = new global::System.Data.DataColumn("coDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoDesc);
                this.columndeptoDesc = new global::System.Data.DataColumn("deptoDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeptoDesc);
                this.columnnumEmp = new global::System.Data.DataColumn("numEmp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumEmp);
                this.columnoverhead = new global::System.Data.DataColumn("overhead", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoverhead);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnUtil.DefaultValue = ((double)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public efByDeptoRow NewefByDeptoRow() {
                return ((efByDeptoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new efByDeptoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(efByDeptoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.efByDeptoRowChanged != null)) {
                    this.efByDeptoRowChanged(this, new efByDeptoRowChangeEvent(((efByDeptoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.efByDeptoRowChanging != null)) {
                    this.efByDeptoRowChanging(this, new efByDeptoRowChangeEvent(((efByDeptoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.efByDeptoRowDeleted != null)) {
                    this.efByDeptoRowDeleted(this, new efByDeptoRowChangeEvent(((efByDeptoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.efByDeptoRowDeleting != null)) {
                    this.efByDeptoRowDeleting(this, new efByDeptoRowChangeEvent(((efByDeptoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveefByDeptoRow(efByDeptoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "efByDeptoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class conciliacionDataTable : global::System.Data.TypedTableBase<conciliacionRow> {
            
            private global::System.Data.DataColumn columnempleado;
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columntotal_horas;
            
            private global::System.Data.DataColumn columnhrs_voucher;
            
            private global::System.Data.DataColumn columncoordinador;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public conciliacionDataTable() {
                this.TableName = "conciliacion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal conciliacionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected conciliacionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn empleadoColumn {
                get {
                    return this.columnempleado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_horasColumn {
                get {
                    return this.columntotal_horas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hrs_voucherColumn {
                get {
                    return this.columnhrs_voucher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coordinadorColumn {
                get {
                    return this.columncoordinador;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public conciliacionRow this[int index] {
                get {
                    return ((conciliacionRow)(this.Rows[index]));
                }
            }
            
            public event conciliacionRowChangeEventHandler conciliacionRowChanging;
            
            public event conciliacionRowChangeEventHandler conciliacionRowChanged;
            
            public event conciliacionRowChangeEventHandler conciliacionRowDeleting;
            
            public event conciliacionRowChangeEventHandler conciliacionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddconciliacionRow(conciliacionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public conciliacionRow AddconciliacionRow(string empleado, string nombre, string total_horas, string hrs_voucher, string coordinador) {
                conciliacionRow rowconciliacionRow = ((conciliacionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        empleado,
                        nombre,
                        total_horas,
                        hrs_voucher,
                        coordinador};
                rowconciliacionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowconciliacionRow);
                return rowconciliacionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                conciliacionDataTable cln = ((conciliacionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new conciliacionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnempleado = base.Columns["empleado"];
                this.columnnombre = base.Columns["nombre"];
                this.columntotal_horas = base.Columns["total_horas"];
                this.columnhrs_voucher = base.Columns["hrs_voucher"];
                this.columncoordinador = base.Columns["coordinador"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnempleado = new global::System.Data.DataColumn("empleado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempleado);
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columntotal_horas = new global::System.Data.DataColumn("total_horas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_horas);
                this.columnhrs_voucher = new global::System.Data.DataColumn("hrs_voucher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhrs_voucher);
                this.columncoordinador = new global::System.Data.DataColumn("coordinador", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoordinador);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public conciliacionRow NewconciliacionRow() {
                return ((conciliacionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new conciliacionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(conciliacionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.conciliacionRowChanged != null)) {
                    this.conciliacionRowChanged(this, new conciliacionRowChangeEvent(((conciliacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.conciliacionRowChanging != null)) {
                    this.conciliacionRowChanging(this, new conciliacionRowChangeEvent(((conciliacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.conciliacionRowDeleted != null)) {
                    this.conciliacionRowDeleted(this, new conciliacionRowChangeEvent(((conciliacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.conciliacionRowDeleting != null)) {
                    this.conciliacionRowDeleting(this, new conciliacionRowChangeEvent(((conciliacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveconciliacionRow(conciliacionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EficienDataSet ds = new EficienDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "conciliacionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DepartamentosRow : global::System.Data.DataRow {
            
            private DepartamentosDataTable tableDepartamentos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartamentosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDepartamentos = ((DepartamentosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Departamento {
                get {
                    try {
                        return ((string)(this[this.tableDepartamentos.DepartamentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Departamento\' in table \'Departamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartamentos.DepartamentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tableDepartamentos.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'Departamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartamentos.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FBU {
                get {
                    try {
                        return ((string)(this[this.tableDepartamentos.FBUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FBU\' in table \'Departamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartamentos.FBUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fbu_desc {
                get {
                    try {
                        return ((string)(this[this.tableDepartamentos.fbu_descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fbu_desc\' in table \'Departamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartamentos.fbu_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string overhead {
                get {
                    try {
                        return ((string)(this[this.tableDepartamentos.overheadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'overhead\' in table \'Departamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartamentos.overheadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartamentoNull() {
                return this.IsNull(this.tableDepartamentos.DepartamentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartamentoNull() {
                this[this.tableDepartamentos.DepartamentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tableDepartamentos.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tableDepartamentos.DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFBUNull() {
                return this.IsNull(this.tableDepartamentos.FBUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFBUNull() {
                this[this.tableDepartamentos.FBUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfbu_descNull() {
                return this.IsNull(this.tableDepartamentos.fbu_descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfbu_descNull() {
                this[this.tableDepartamentos.fbu_descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoverheadNull() {
                return this.IsNull(this.tableDepartamentos.overheadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoverheadNull() {
                this[this.tableDepartamentos.overheadColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CentrosTrabajosRow : global::System.Data.DataRow {
            
            private CentrosTrabajosDataTable tableCentrosTrabajos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CentrosTrabajosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCentrosTrabajos = ((CentrosTrabajosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CentroTrabajo {
                get {
                    try {
                        return ((string)(this[this.tableCentrosTrabajos.CentroTrabajoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CentroTrabajo\' in table \'CentrosTrabajos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosTrabajos.CentroTrabajoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tableCentrosTrabajos.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'CentrosTrabajos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosTrabajos.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Departamento {
                get {
                    try {
                        return ((string)(this[this.tableCentrosTrabajos.DepartamentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Departamento\' in table \'CentrosTrabajos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosTrabajos.DepartamentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string depDesc {
                get {
                    try {
                        return ((string)(this[this.tableCentrosTrabajos.depDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'depDesc\' in table \'CentrosTrabajos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosTrabajos.depDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FBU {
                get {
                    try {
                        return ((string)(this[this.tableCentrosTrabajos.FBUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FBU\' in table \'CentrosTrabajos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosTrabajos.FBUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fbu_desc {
                get {
                    try {
                        return ((string)(this[this.tableCentrosTrabajos.fbu_descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fbu_desc\' in table \'CentrosTrabajos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCentrosTrabajos.fbu_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCentroTrabajoNull() {
                return this.IsNull(this.tableCentrosTrabajos.CentroTrabajoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCentroTrabajoNull() {
                this[this.tableCentrosTrabajos.CentroTrabajoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tableCentrosTrabajos.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tableCentrosTrabajos.DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartamentoNull() {
                return this.IsNull(this.tableCentrosTrabajos.DepartamentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartamentoNull() {
                this[this.tableCentrosTrabajos.DepartamentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdepDescNull() {
                return this.IsNull(this.tableCentrosTrabajos.depDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdepDescNull() {
                this[this.tableCentrosTrabajos.depDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFBUNull() {
                return this.IsNull(this.tableCentrosTrabajos.FBUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFBUNull() {
                this[this.tableCentrosTrabajos.FBUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfbu_descNull() {
                return this.IsNull(this.tableCentrosTrabajos.fbu_descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfbu_descNull() {
                this[this.tableCentrosTrabajos.fbu_descColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LineasRow : global::System.Data.DataRow {
            
            private LineasDataTable tableLineas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LineasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLineas = ((LineasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Linea {
                get {
                    try {
                        return ((string)(this[this.tableLineas.LineaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Linea\' in table \'Lineas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLineas.LineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tableLineas.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'Lineas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLineas.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Departamento {
                get {
                    try {
                        return ((string)(this[this.tableLineas.DepartamentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Departamento\' in table \'Lineas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLineas.DepartamentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CentroTrabajo {
                get {
                    try {
                        return ((string)(this[this.tableLineas.CentroTrabajoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CentroTrabajo\' in table \'Lineas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLineas.CentroTrabajoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ctDesc {
                get {
                    try {
                        return ((string)(this[this.tableLineas.ctDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ctDesc\' in table \'Lineas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLineas.ctDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string linDesc {
                get {
                    try {
                        return ((string)(this[this.tableLineas.linDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'linDesc\' in table \'Lineas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLineas.linDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FBU {
                get {
                    try {
                        return ((string)(this[this.tableLineas.FBUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FBU\' in table \'Lineas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLineas.FBUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fbu_desc {
                get {
                    try {
                        return ((string)(this[this.tableLineas.fbu_descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fbu_desc\' in table \'Lineas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLineas.fbu_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineaNull() {
                return this.IsNull(this.tableLineas.LineaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineaNull() {
                this[this.tableLineas.LineaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tableLineas.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tableLineas.DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartamentoNull() {
                return this.IsNull(this.tableLineas.DepartamentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartamentoNull() {
                this[this.tableLineas.DepartamentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCentroTrabajoNull() {
                return this.IsNull(this.tableLineas.CentroTrabajoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCentroTrabajoNull() {
                this[this.tableLineas.CentroTrabajoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsctDescNull() {
                return this.IsNull(this.tableLineas.ctDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetctDescNull() {
                this[this.tableLineas.ctDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslinDescNull() {
                return this.IsNull(this.tableLineas.linDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlinDescNull() {
                this[this.tableLineas.linDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFBUNull() {
                return this.IsNull(this.tableLineas.FBUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFBUNull() {
                this[this.tableLineas.FBUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfbu_descNull() {
                return this.IsNull(this.tableLineas.fbu_descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfbu_descNull() {
                this[this.tableLineas.fbu_descColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CodigosDeOperacionRow : global::System.Data.DataRow {
            
            private CodigosDeOperacionDataTable tableCodigosDeOperacion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CodigosDeOperacionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCodigosDeOperacion = ((CodigosDeOperacionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodigoOperacion {
                get {
                    return ((string)(this[this.tableCodigosDeOperacion.CodigoOperacionColumn]));
                }
                set {
                    this[this.tableCodigosDeOperacion.CodigoOperacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodigoReferencia {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.CodigoReferenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodigoReferencia\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.CodigoReferenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroOperacion {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.NumeroOperacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroOperacion\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.NumeroOperacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DescEsp {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.DescEspColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescEsp\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.DescEspColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string deptoDesc {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.deptoDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deptoDesc\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.deptoDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double System_Standard {
                get {
                    try {
                        return ((double)(this[this.tableCodigosDeOperacion.System_StandardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'System_Standard\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.System_StandardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Standard {
                get {
                    try {
                        return ((double)(this[this.tableCodigosDeOperacion.StandardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Standard\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.StandardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Operadores {
                get {
                    try {
                        return ((double)(this[this.tableCodigosDeOperacion.OperadoresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Operadores\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.OperadoresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Standard_Group {
                get {
                    try {
                        return ((double)(this[this.tableCodigosDeOperacion.Standard_GroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Standard_Group\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.Standard_GroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MTM {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.MTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTM\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.MTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Oracle {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.OracleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oracle\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.OracleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FBU {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.FBUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FBU\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.FBUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fbu_desc {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.fbu_descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fbu_desc\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.fbu_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CentroTrabajo {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.CentroTrabajoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CentroTrabajo\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.CentroTrabajoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string desc_ct {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.desc_ctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'desc_ct\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.desc_ctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string aplicapara {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.aplicaparaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aplicapara\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.aplicaparaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descIng {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.descIngColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descIng\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.descIngColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hrs_ing {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.hrs_ingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hrs_ing\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.hrs_ingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string proceso {
                get {
                    try {
                        return ((string)(this[this.tableCodigosDeOperacion.procesoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'proceso\' in table \'CodigosDeOperacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodigosDeOperacion.procesoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoReferenciaNull() {
                return this.IsNull(this.tableCodigosDeOperacion.CodigoReferenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoReferenciaNull() {
                this[this.tableCodigosDeOperacion.CodigoReferenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroOperacionNull() {
                return this.IsNull(this.tableCodigosDeOperacion.NumeroOperacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroOperacionNull() {
                this[this.tableCodigosDeOperacion.NumeroOperacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescEspNull() {
                return this.IsNull(this.tableCodigosDeOperacion.DescEspColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescEspNull() {
                this[this.tableCodigosDeOperacion.DescEspColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdeptoDescNull() {
                return this.IsNull(this.tableCodigosDeOperacion.deptoDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdeptoDescNull() {
                this[this.tableCodigosDeOperacion.deptoDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSystem_StandardNull() {
                return this.IsNull(this.tableCodigosDeOperacion.System_StandardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSystem_StandardNull() {
                this[this.tableCodigosDeOperacion.System_StandardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardNull() {
                return this.IsNull(this.tableCodigosDeOperacion.StandardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardNull() {
                this[this.tableCodigosDeOperacion.StandardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperadoresNull() {
                return this.IsNull(this.tableCodigosDeOperacion.OperadoresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperadoresNull() {
                this[this.tableCodigosDeOperacion.OperadoresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandard_GroupNull() {
                return this.IsNull(this.tableCodigosDeOperacion.Standard_GroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandard_GroupNull() {
                this[this.tableCodigosDeOperacion.Standard_GroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMTMNull() {
                return this.IsNull(this.tableCodigosDeOperacion.MTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMTMNull() {
                this[this.tableCodigosDeOperacion.MTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOracleNull() {
                return this.IsNull(this.tableCodigosDeOperacion.OracleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOracleNull() {
                this[this.tableCodigosDeOperacion.OracleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFBUNull() {
                return this.IsNull(this.tableCodigosDeOperacion.FBUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFBUNull() {
                this[this.tableCodigosDeOperacion.FBUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfbu_descNull() {
                return this.IsNull(this.tableCodigosDeOperacion.fbu_descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfbu_descNull() {
                this[this.tableCodigosDeOperacion.fbu_descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCentroTrabajoNull() {
                return this.IsNull(this.tableCodigosDeOperacion.CentroTrabajoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCentroTrabajoNull() {
                this[this.tableCodigosDeOperacion.CentroTrabajoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdesc_ctNull() {
                return this.IsNull(this.tableCodigosDeOperacion.desc_ctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdesc_ctNull() {
                this[this.tableCodigosDeOperacion.desc_ctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaplicaparaNull() {
                return this.IsNull(this.tableCodigosDeOperacion.aplicaparaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaplicaparaNull() {
                this[this.tableCodigosDeOperacion.aplicaparaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescIngNull() {
                return this.IsNull(this.tableCodigosDeOperacion.descIngColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescIngNull() {
                this[this.tableCodigosDeOperacion.descIngColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishrs_ingNull() {
                return this.IsNull(this.tableCodigosDeOperacion.hrs_ingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethrs_ingNull() {
                this[this.tableCodigosDeOperacion.hrs_ingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprocesoNull() {
                return this.IsNull(this.tableCodigosDeOperacion.procesoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprocesoNull() {
                this[this.tableCodigosDeOperacion.procesoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vouchersRow : global::System.Data.DataRow {
            
            private vouchersDataTable tablevouchers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vouchersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevouchers = ((vouchersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablevouchers.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fecha\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Turno {
                get {
                    try {
                        return ((short)(this[this.tablevouchers.TurnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Turno\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.TurnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supervisor {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.SupervisorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supervisor\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.SupervisorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empezo {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.EmpezoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Empezo\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.EmpezoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Termino {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.TerminoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Termino\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.TerminoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodigoOperacion {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.CodigoOperacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodigoOperacion\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.CodigoOperacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Horas {
                get {
                    try {
                        return ((double)(this[this.tablevouchers.HorasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Horas\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.HorasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProdTotal {
                get {
                    try {
                        return ((int)(this[this.tablevouchers.ProdTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProdTotal\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.ProdTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Produccion {
                get {
                    try {
                        return ((double)(this[this.tablevouchers.ProduccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Produccion\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.ProduccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numempl {
                get {
                    try {
                        return ((int)(this[this.tablevouchers.numemplColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numempl\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.numemplColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombEmpl {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.nombEmplColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombEmpl\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.nombEmplColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DescCodOp {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.DescCodOpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescCodOp\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.DescCodOpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Eficiencia {
                get {
                    try {
                        return ((double)(this[this.tablevouchers.EficienciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Eficiencia\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.EficienciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Linea {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.LineaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Linea\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.LineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FBU {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.FBUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FBU\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.FBUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fbu_desc {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.fbu_descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fbu_desc\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.fbu_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string departamento {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.departamentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'departamento\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.departamentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string centrotrabajo {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.centrotrabajoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'centrotrabajo\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.centrotrabajoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coordinador {
                get {
                    try {
                        return ((string)(this[this.tablevouchers.coordinadorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coordinador\' in table \'vouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevouchers.coordinadorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.tablevouchers.FechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.tablevouchers.FechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTurnoNull() {
                return this.IsNull(this.tablevouchers.TurnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTurnoNull() {
                this[this.tablevouchers.TurnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupervisorNull() {
                return this.IsNull(this.tablevouchers.SupervisorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupervisorNull() {
                this[this.tablevouchers.SupervisorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpezoNull() {
                return this.IsNull(this.tablevouchers.EmpezoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpezoNull() {
                this[this.tablevouchers.EmpezoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTerminoNull() {
                return this.IsNull(this.tablevouchers.TerminoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTerminoNull() {
                this[this.tablevouchers.TerminoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoOperacionNull() {
                return this.IsNull(this.tablevouchers.CodigoOperacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoOperacionNull() {
                this[this.tablevouchers.CodigoOperacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHorasNull() {
                return this.IsNull(this.tablevouchers.HorasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHorasNull() {
                this[this.tablevouchers.HorasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProdTotalNull() {
                return this.IsNull(this.tablevouchers.ProdTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProdTotalNull() {
                this[this.tablevouchers.ProdTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduccionNull() {
                return this.IsNull(this.tablevouchers.ProduccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduccionNull() {
                this[this.tablevouchers.ProduccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumemplNull() {
                return this.IsNull(this.tablevouchers.numemplColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumemplNull() {
                this[this.tablevouchers.numemplColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombEmplNull() {
                return this.IsNull(this.tablevouchers.nombEmplColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombEmplNull() {
                this[this.tablevouchers.nombEmplColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescCodOpNull() {
                return this.IsNull(this.tablevouchers.DescCodOpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescCodOpNull() {
                this[this.tablevouchers.DescCodOpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEficienciaNull() {
                return this.IsNull(this.tablevouchers.EficienciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEficienciaNull() {
                this[this.tablevouchers.EficienciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineaNull() {
                return this.IsNull(this.tablevouchers.LineaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineaNull() {
                this[this.tablevouchers.LineaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFBUNull() {
                return this.IsNull(this.tablevouchers.FBUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFBUNull() {
                this[this.tablevouchers.FBUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfbu_descNull() {
                return this.IsNull(this.tablevouchers.fbu_descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfbu_descNull() {
                this[this.tablevouchers.fbu_descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdepartamentoNull() {
                return this.IsNull(this.tablevouchers.departamentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdepartamentoNull() {
                this[this.tablevouchers.departamentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscentrotrabajoNull() {
                return this.IsNull(this.tablevouchers.centrotrabajoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcentrotrabajoNull() {
                this[this.tablevouchers.centrotrabajoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoordinadorNull() {
                return this.IsNull(this.tablevouchers.coordinadorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoordinadorNull() {
                this[this.tablevouchers.coordinadorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class lstLineasRow : global::System.Data.DataRow {
            
            private lstLineasDataTable tablelstLineas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lstLineasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelstLineas = ((lstLineasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Linea {
                get {
                    try {
                        return ((string)(this[this.tablelstLineas.LineaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Linea\' in table \'lstLineas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstLineas.LineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablelstLineas.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'lstLineas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstLineas.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineaNull() {
                return this.IsNull(this.tablelstLineas.LineaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineaNull() {
                this[this.tablelstLineas.LineaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablelstLineas.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tablelstLineas.DescripcionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EmpleadosRow : global::System.Data.DataRow {
            
            private EmpleadosDataTable tableEmpleados;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmpleadosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmpleados = ((EmpleadosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Empleado {
                get {
                    try {
                        return ((int)(this[this.tableEmpleados.EmpleadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Empleado\' in table \'Empleados\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmpleados.EmpleadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tableEmpleados.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre\' in table \'Empleados\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmpleados.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpleadoNull() {
                return this.IsNull(this.tableEmpleados.EmpleadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpleadoNull() {
                this[this.tableEmpleados.EmpleadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.tableEmpleados.NombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.tableEmpleados.NombreColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class lstCodDirRow : global::System.Data.DataRow {
            
            private lstCodDirDataTable tablelstCodDir;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lstCodDirRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelstCodDir = ((lstCodDirDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Turno {
                get {
                    try {
                        return ((short)(this[this.tablelstCodDir.TurnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Turno\' in table \'lstCodDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstCodDir.TurnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Departamento {
                get {
                    try {
                        return ((string)(this[this.tablelstCodDir.DepartamentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Departamento\' in table \'lstCodDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstCodDir.DepartamentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablelstCodDir.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'lstCodDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstCodDir.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DHoras {
                get {
                    try {
                        return ((double)(this[this.tablelstCodDir.DHorasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DHoras\' in table \'lstCodDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstCodDir.DHorasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HEarned {
                get {
                    try {
                        return ((double)(this[this.tablelstCodDir.HEarnedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HEarned\' in table \'lstCodDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstCodDir.HEarnedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Eficiencia {
                get {
                    try {
                        return ((double)(this[this.tablelstCodDir.EficienciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Eficiencia\' in table \'lstCodDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstCodDir.EficienciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Productivity {
                get {
                    try {
                        return ((double)(this[this.tablelstCodDir.ProductivityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Productivity\' in table \'lstCodDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstCodDir.ProductivityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTurnoNull() {
                return this.IsNull(this.tablelstCodDir.TurnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTurnoNull() {
                this[this.tablelstCodDir.TurnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartamentoNull() {
                return this.IsNull(this.tablelstCodDir.DepartamentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartamentoNull() {
                this[this.tablelstCodDir.DepartamentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablelstCodDir.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tablelstCodDir.DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDHorasNull() {
                return this.IsNull(this.tablelstCodDir.DHorasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDHorasNull() {
                this[this.tablelstCodDir.DHorasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHEarnedNull() {
                return this.IsNull(this.tablelstCodDir.HEarnedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHEarnedNull() {
                this[this.tablelstCodDir.HEarnedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEficienciaNull() {
                return this.IsNull(this.tablelstCodDir.EficienciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEficienciaNull() {
                this[this.tablelstCodDir.EficienciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductivityNull() {
                return this.IsNull(this.tablelstCodDir.ProductivityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductivityNull() {
                this[this.tablelstCodDir.ProductivityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class lstCodIndRow : global::System.Data.DataRow {
            
            private lstCodIndDataTable tablelstCodInd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lstCodIndRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelstCodInd = ((lstCodIndDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Departamento {
                get {
                    try {
                        return ((string)(this[this.tablelstCodInd.DepartamentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Departamento\' in table \'lstCodInd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstCodInd.DepartamentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DHoras {
                get {
                    try {
                        return ((double)(this[this.tablelstCodInd.DHorasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DHoras\' in table \'lstCodInd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstCodInd.DHorasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Consecutivo {
                get {
                    try {
                        return ((string)(this[this.tablelstCodInd.ConsecutivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consecutivo\' in table \'lstCodInd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstCodInd.ConsecutivoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartamentoNull() {
                return this.IsNull(this.tablelstCodInd.DepartamentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartamentoNull() {
                this[this.tablelstCodInd.DepartamentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDHorasNull() {
                return this.IsNull(this.tablelstCodInd.DHorasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDHorasNull() {
                this[this.tablelstCodInd.DHorasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsecutivoNull() {
                return this.IsNull(this.tablelstCodInd.ConsecutivoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsecutivoNull() {
                this[this.tablelstCodInd.ConsecutivoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class lstFbusRow : global::System.Data.DataRow {
            
            private lstFbusDataTable tablelstFbus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lstFbusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelstFbus = ((lstFbusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablelstFbus.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'lstFbus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstFbus.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FBU {
                get {
                    try {
                        return ((string)(this[this.tablelstFbus.FBUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FBU\' in table \'lstFbus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelstFbus.FBUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablelstFbus.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tablelstFbus.DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFBUNull() {
                return this.IsNull(this.tablelstFbus.FBUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFBUNull() {
                this[this.tablelstFbus.FBUColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SupervisoresRow : global::System.Data.DataRow {
            
            private SupervisoresDataTable tableSupervisores;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SupervisoresRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSupervisores = ((SupervisoresDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supervisor {
                get {
                    try {
                        return ((string)(this[this.tableSupervisores.SupervisorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supervisor\' in table \'Supervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupervisores.SupervisorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tableSupervisores.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre\' in table \'Supervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupervisores.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_Coordinador {
                get {
                    try {
                        return ((string)(this[this.tableSupervisores.ID_CoordinadorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_Coordinador\' in table \'Supervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupervisores.ID_CoordinadorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre_coord {
                get {
                    try {
                        return ((string)(this[this.tableSupervisores.Nombre_coordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre_coord\' in table \'Supervisores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupervisores.Nombre_coordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupervisorNull() {
                return this.IsNull(this.tableSupervisores.SupervisorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupervisorNull() {
                this[this.tableSupervisores.SupervisorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.tableSupervisores.NombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.tableSupervisores.NombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_CoordinadorNull() {
                return this.IsNull(this.tableSupervisores.ID_CoordinadorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_CoordinadorNull() {
                this[this.tableSupervisores.ID_CoordinadorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombre_coordNull() {
                return this.IsNull(this.tableSupervisores.Nombre_coordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombre_coordNull() {
                this[this.tableSupervisores.Nombre_coordColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class efByDeptoRow : global::System.Data.DataRow {
            
            private efByDeptoDataTable tableefByDepto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal efByDeptoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableefByDepto = ((efByDeptoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string depto {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.deptoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'depto\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.deptoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descr {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descr\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Turno {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.TurnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Turno\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.TurnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hEarn {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.hEarnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hEarn\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.hEarnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dHrs {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.dHrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dHrs\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.dHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ef {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.efColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ef\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.efColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Produc {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.ProducColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Produc\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.ProducColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0080 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0080Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0080\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0080Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0081 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0081Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0081\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0081Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0082 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0082Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0082\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0082Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0083 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0083Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0083\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0083Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0084 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0084Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0084\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0084Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0085 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0085Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0085\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0085Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0086 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0086Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0086\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0086Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0087 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0087Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0087\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0087Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0088 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0088Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0088\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0088Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0089 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0089Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0089\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0089Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0090 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0090Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0090\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0090Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0091 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0091Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0091\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0091Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0092 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0092Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0092\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0092Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0093 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0093Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0093\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0093Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0094 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0094Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0094\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0094Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0095 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0095Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0095\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0095Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0096 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0096Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0096\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0096Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0097 {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto._0097Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0097\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto._0097Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HI {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.HIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HI\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.HIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HT {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.HTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HT\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.HTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Util {
                get {
                    try {
                        return ((double)(this[this.tableefByDepto.UtilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Util\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.UtilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ct {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.ctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ct\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.ctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string linea {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.lineaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'linea\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.lineaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codigooperacion {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.codigooperacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codigooperacion\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.codigooperacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codOpEmp {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.codOpEmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codOpEmp\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.codOpEmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string emp {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.empColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'emp\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.empColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sup {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.supColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sup\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.supColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fbu {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.FbuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fbu\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.FbuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fbuDesc {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.fbuDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fbuDesc\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.fbuDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lineaDesc {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.lineaDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lineaDesc\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.lineaDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coDesc {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.coDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coDesc\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.coDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string deptoDesc {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.deptoDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deptoDesc\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.deptoDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string numEmp {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.numEmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numEmp\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.numEmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string overhead {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.overheadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'overhead\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.overheadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fecha {
                get {
                    try {
                        return ((string)(this[this.tableefByDepto.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fecha\' in table \'efByDepto\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableefByDepto.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdeptoNull() {
                return this.IsNull(this.tableefByDepto.deptoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdeptoNull() {
                this[this.tableefByDepto.deptoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescrNull() {
                return this.IsNull(this.tableefByDepto.DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescrNull() {
                this[this.tableefByDepto.DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTurnoNull() {
                return this.IsNull(this.tableefByDepto.TurnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTurnoNull() {
                this[this.tableefByDepto.TurnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshEarnNull() {
                return this.IsNull(this.tableefByDepto.hEarnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethEarnNull() {
                this[this.tableefByDepto.hEarnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdHrsNull() {
                return this.IsNull(this.tableefByDepto.dHrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdHrsNull() {
                this[this.tableefByDepto.dHrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsefNull() {
                return this.IsNull(this.tableefByDepto.efColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetefNull() {
                this[this.tableefByDepto.efColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProducNull() {
                return this.IsNull(this.tableefByDepto.ProducColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProducNull() {
                this[this.tableefByDepto.ProducColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0080Null() {
                return this.IsNull(this.tableefByDepto._0080Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0080Null() {
                this[this.tableefByDepto._0080Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0081Null() {
                return this.IsNull(this.tableefByDepto._0081Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0081Null() {
                this[this.tableefByDepto._0081Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0082Null() {
                return this.IsNull(this.tableefByDepto._0082Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0082Null() {
                this[this.tableefByDepto._0082Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0083Null() {
                return this.IsNull(this.tableefByDepto._0083Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0083Null() {
                this[this.tableefByDepto._0083Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0084Null() {
                return this.IsNull(this.tableefByDepto._0084Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0084Null() {
                this[this.tableefByDepto._0084Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0085Null() {
                return this.IsNull(this.tableefByDepto._0085Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0085Null() {
                this[this.tableefByDepto._0085Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0086Null() {
                return this.IsNull(this.tableefByDepto._0086Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0086Null() {
                this[this.tableefByDepto._0086Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0087Null() {
                return this.IsNull(this.tableefByDepto._0087Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0087Null() {
                this[this.tableefByDepto._0087Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0088Null() {
                return this.IsNull(this.tableefByDepto._0088Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0088Null() {
                this[this.tableefByDepto._0088Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0089Null() {
                return this.IsNull(this.tableefByDepto._0089Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0089Null() {
                this[this.tableefByDepto._0089Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0090Null() {
                return this.IsNull(this.tableefByDepto._0090Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0090Null() {
                this[this.tableefByDepto._0090Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0091Null() {
                return this.IsNull(this.tableefByDepto._0091Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0091Null() {
                this[this.tableefByDepto._0091Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0092Null() {
                return this.IsNull(this.tableefByDepto._0092Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0092Null() {
                this[this.tableefByDepto._0092Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0093Null() {
                return this.IsNull(this.tableefByDepto._0093Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0093Null() {
                this[this.tableefByDepto._0093Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0094Null() {
                return this.IsNull(this.tableefByDepto._0094Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0094Null() {
                this[this.tableefByDepto._0094Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0095Null() {
                return this.IsNull(this.tableefByDepto._0095Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0095Null() {
                this[this.tableefByDepto._0095Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0096Null() {
                return this.IsNull(this.tableefByDepto._0096Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0096Null() {
                this[this.tableefByDepto._0096Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0097Null() {
                return this.IsNull(this.tableefByDepto._0097Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0097Null() {
                this[this.tableefByDepto._0097Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHINull() {
                return this.IsNull(this.tableefByDepto.HIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHINull() {
                this[this.tableefByDepto.HIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHTNull() {
                return this.IsNull(this.tableefByDepto.HTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHTNull() {
                this[this.tableefByDepto.HTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilNull() {
                return this.IsNull(this.tableefByDepto.UtilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilNull() {
                this[this.tableefByDepto.UtilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsctNull() {
                return this.IsNull(this.tableefByDepto.ctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetctNull() {
                this[this.tableefByDepto.ctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslineaNull() {
                return this.IsNull(this.tableefByDepto.lineaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlineaNull() {
                this[this.tableefByDepto.lineaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodigooperacionNull() {
                return this.IsNull(this.tableefByDepto.codigooperacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodigooperacionNull() {
                this[this.tableefByDepto.codigooperacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodOpEmpNull() {
                return this.IsNull(this.tableefByDepto.codOpEmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodOpEmpNull() {
                this[this.tableefByDepto.codOpEmpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempNull() {
                return this.IsNull(this.tableefByDepto.empColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempNull() {
                this[this.tableefByDepto.empColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssupNull() {
                return this.IsNull(this.tableefByDepto.supColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsupNull() {
                this[this.tableefByDepto.supColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFbuNull() {
                return this.IsNull(this.tableefByDepto.FbuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFbuNull() {
                this[this.tableefByDepto.FbuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfbuDescNull() {
                return this.IsNull(this.tableefByDepto.fbuDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfbuDescNull() {
                this[this.tableefByDepto.fbuDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslineaDescNull() {
                return this.IsNull(this.tableefByDepto.lineaDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlineaDescNull() {
                this[this.tableefByDepto.lineaDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoDescNull() {
                return this.IsNull(this.tableefByDepto.coDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoDescNull() {
                this[this.tableefByDepto.coDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdeptoDescNull() {
                return this.IsNull(this.tableefByDepto.deptoDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdeptoDescNull() {
                this[this.tableefByDepto.deptoDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumEmpNull() {
                return this.IsNull(this.tableefByDepto.numEmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumEmpNull() {
                this[this.tableefByDepto.numEmpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoverheadNull() {
                return this.IsNull(this.tableefByDepto.overheadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoverheadNull() {
                this[this.tableefByDepto.overheadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.tableefByDepto.FechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.tableefByDepto.FechaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class conciliacionRow : global::System.Data.DataRow {
            
            private conciliacionDataTable tableconciliacion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal conciliacionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableconciliacion = ((conciliacionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empleado {
                get {
                    try {
                        return ((string)(this[this.tableconciliacion.empleadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empleado\' in table \'conciliacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconciliacion.empleadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tableconciliacion.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'conciliacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconciliacion.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string total_horas {
                get {
                    try {
                        return ((string)(this[this.tableconciliacion.total_horasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total_horas\' in table \'conciliacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconciliacion.total_horasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hrs_voucher {
                get {
                    try {
                        return ((string)(this[this.tableconciliacion.hrs_voucherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hrs_voucher\' in table \'conciliacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconciliacion.hrs_voucherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coordinador {
                get {
                    try {
                        return ((string)(this[this.tableconciliacion.coordinadorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coordinador\' in table \'conciliacion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconciliacion.coordinadorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsempleadoNull() {
                return this.IsNull(this.tableconciliacion.empleadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetempleadoNull() {
                this[this.tableconciliacion.empleadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tableconciliacion.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tableconciliacion.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_horasNull() {
                return this.IsNull(this.tableconciliacion.total_horasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_horasNull() {
                this[this.tableconciliacion.total_horasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishrs_voucherNull() {
                return this.IsNull(this.tableconciliacion.hrs_voucherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethrs_voucherNull() {
                this[this.tableconciliacion.hrs_voucherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoordinadorNull() {
                return this.IsNull(this.tableconciliacion.coordinadorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoordinadorNull() {
                this[this.tableconciliacion.coordinadorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DepartamentosRowChangeEvent : global::System.EventArgs {
            
            private DepartamentosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartamentosRowChangeEvent(DepartamentosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartamentosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CentrosTrabajosRowChangeEvent : global::System.EventArgs {
            
            private CentrosTrabajosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentrosTrabajosRowChangeEvent(CentrosTrabajosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CentrosTrabajosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LineasRowChangeEvent : global::System.EventArgs {
            
            private LineasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LineasRowChangeEvent(LineasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LineasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CodigosDeOperacionRowChangeEvent : global::System.EventArgs {
            
            private CodigosDeOperacionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodigosDeOperacionRowChangeEvent(CodigosDeOperacionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CodigosDeOperacionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vouchersRowChangeEvent : global::System.EventArgs {
            
            private vouchersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vouchersRowChangeEvent(vouchersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vouchersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class lstLineasRowChangeEvent : global::System.EventArgs {
            
            private lstLineasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstLineasRowChangeEvent(lstLineasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstLineasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EmpleadosRowChangeEvent : global::System.EventArgs {
            
            private EmpleadosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmpleadosRowChangeEvent(EmpleadosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmpleadosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class lstCodDirRowChangeEvent : global::System.EventArgs {
            
            private lstCodDirRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodDirRowChangeEvent(lstCodDirRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodDirRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class lstCodIndRowChangeEvent : global::System.EventArgs {
            
            private lstCodIndRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodIndRowChangeEvent(lstCodIndRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstCodIndRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class lstFbusRowChangeEvent : global::System.EventArgs {
            
            private lstFbusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstFbusRowChangeEvent(lstFbusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lstFbusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SupervisoresRowChangeEvent : global::System.EventArgs {
            
            private SupervisoresRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupervisoresRowChangeEvent(SupervisoresRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupervisoresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class efByDeptoRowChangeEvent : global::System.EventArgs {
            
            private efByDeptoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public efByDeptoRowChangeEvent(efByDeptoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public efByDeptoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class conciliacionRowChangeEvent : global::System.EventArgs {
            
            private conciliacionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public conciliacionRowChangeEvent(conciliacionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public conciliacionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ReportsApplication1.EficienDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DepartamentosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DepartamentosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Departamentos";
            tableMapping.ColumnMappings.Add("Departamento", "Departamento");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("FBU", "FBU");
            tableMapping.ColumnMappings.Add("fbu_desc", "fbu_desc");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::ReportsApplication1.Properties.Settings.Default.EficienConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        FBU_s.FBU, FBU_s.Descripcion AS fbu_desc, Departamentos.Departament" +
                "o, Departamentos.Descripcion\r\nFROM            (Departamentos INNER JOIN\r\n       " +
                "                  FBU_s ON Departamentos.FBU = FBU_s.FBU)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EficienDataSet.DepartamentosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EficienDataSet.DepartamentosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EficienDataSet.DepartamentosDataTable dataTable = new EficienDataSet.DepartamentosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CentrosTrabajosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CentrosTrabajosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CentrosTrabajos";
            tableMapping.ColumnMappings.Add("CentroTrabajo", "CentroTrabajo");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Departamento", "Departamento");
            tableMapping.ColumnMappings.Add("depDesc", "depDesc");
            tableMapping.ColumnMappings.Add("FBU", "FBU");
            tableMapping.ColumnMappings.Add("fbu_desc", "fbu_desc");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::ReportsApplication1.Properties.Settings.Default.EficienConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        FBU_s.FBU, FBU_s.Descripcion AS fbu_desc, Departamentos.Departamento, Departamentos.Descripcion AS depDesc, CentrosTrabajos.CentroTrabajo, 
                         CentrosTrabajos.Descripcion
FROM            ((CentrosTrabajos INNER JOIN
                         Departamentos ON CentrosTrabajos.Departamento = Departamentos.Departamento) INNER JOIN
                         FBU_s ON CentrosTrabajos.FBU = FBU_s.FBU)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EficienDataSet.CentrosTrabajosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EficienDataSet.CentrosTrabajosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EficienDataSet.CentrosTrabajosDataTable dataTable = new EficienDataSet.CentrosTrabajosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LineasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LineasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Lineas";
            tableMapping.ColumnMappings.Add("Linea", "Linea");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Departamento", "Departamento");
            tableMapping.ColumnMappings.Add("CentroTrabajo", "CentroTrabajo");
            tableMapping.ColumnMappings.Add("ctDesc", "ctDesc");
            tableMapping.ColumnMappings.Add("linDesc", "linDesc");
            tableMapping.ColumnMappings.Add("FBU", "FBU");
            tableMapping.ColumnMappings.Add("fbu_desc", "fbu_desc");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::ReportsApplication1.Properties.Settings.Default.EficienConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        FBU_s.FBU, FBU_s.Descripcion AS fbu_desc, Departamentos.Departamento, Departamentos.Descripcion, CentrosTrabajos.CentroTrabajo, 
                         CentrosTrabajos.Descripcion AS ctDesc, Lineas.Linea, Lineas.Descripcion AS linDesc
FROM            (((Lineas INNER JOIN
                         Departamentos ON Lineas.Departamento = Departamentos.Departamento) INNER JOIN
                         CentrosTrabajos ON Lineas.CentroTrabajo = CentrosTrabajos.CentroTrabajo) INNER JOIN
                         FBU_s ON Lineas.FBU = FBU_s.FBU)
ORDER BY Lineas.Linea";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EficienDataSet.LineasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EficienDataSet.LineasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EficienDataSet.LineasDataTable dataTable = new EficienDataSet.LineasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CodigosDeOperacionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CodigosDeOperacionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CodigosDeOperacion";
            tableMapping.ColumnMappings.Add("CodigoOperacion", "CodigoOperacion");
            tableMapping.ColumnMappings.Add("CodigoReferencia", "CodigoReferencia");
            tableMapping.ColumnMappings.Add("NumeroOperacion", "NumeroOperacion");
            tableMapping.ColumnMappings.Add("DescEsp", "DescEsp");
            tableMapping.ColumnMappings.Add("deptoDesc", "deptoDesc");
            tableMapping.ColumnMappings.Add("System_Standard", "System_Standard");
            tableMapping.ColumnMappings.Add("Standard", "Standard");
            tableMapping.ColumnMappings.Add("Operadores", "Operadores");
            tableMapping.ColumnMappings.Add("Standard_Group", "Standard_Group");
            tableMapping.ColumnMappings.Add("MTM", "MTM");
            tableMapping.ColumnMappings.Add("Oracle", "Oracle");
            tableMapping.ColumnMappings.Add("FBU", "FBU");
            tableMapping.ColumnMappings.Add("fbu_desc", "fbu_desc");
            tableMapping.ColumnMappings.Add("CentroTrabajo", "CentroTrabajo");
            tableMapping.ColumnMappings.Add("desc_ct", "desc_ct");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::ReportsApplication1.Properties.Settings.Default.EficienConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     FBU_s.FBU, FBU_s.Descripcion AS fbu_desc, CentrosTrabajos.CentroTrabajo, CentrosTrabajos.Descripcion AS desc_ct, 
                      Departamentos.Departamento AS deptoDesc, CodigosDeOperacion.CodigoOperacion, CodigosDeOperacion.CodigoReferencia, 
                      CodigosDeOperacion.NumeroOperacion, CodigosDeOperacion.DescEsp, CodigosDeOperacion.System_Standard, CodigosDeOperacion.Standard, 
                      CodigosDeOperacion.Operadores, CodigosDeOperacion.Standard_Group, CodigosDeOperacion.MTM, CodigosDeOperacion.Oracle
FROM         (((CodigosDeOperacion INNER JOIN
                      Departamentos ON CodigosDeOperacion.Departamento = Departamentos.Departamento) INNER JOIN
                      FBU_s ON CodigosDeOperacion.FBU = FBU_s.FBU) INNER JOIN
                      CentrosTrabajos ON CodigosDeOperacion.CentroTrabajo = CentrosTrabajos.CentroTrabajo)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EficienDataSet.CodigosDeOperacionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EficienDataSet.CodigosDeOperacionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EficienDataSet.CodigosDeOperacionDataTable dataTable = new EficienDataSet.CodigosDeOperacionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class voucherTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public voucherTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vouchers";
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Turno", "Turno");
            tableMapping.ColumnMappings.Add("Supervisor", "Supervisor");
            tableMapping.ColumnMappings.Add("Empezo", "Empezo");
            tableMapping.ColumnMappings.Add("Termino", "Termino");
            tableMapping.ColumnMappings.Add("CodigoOperacion", "CodigoOperacion");
            tableMapping.ColumnMappings.Add("Horas", "Horas");
            tableMapping.ColumnMappings.Add("ProdTotal", "ProdTotal");
            tableMapping.ColumnMappings.Add("Produccion", "Produccion");
            tableMapping.ColumnMappings.Add("numempl", "numempl");
            tableMapping.ColumnMappings.Add("nombEmpl", "nombEmpl");
            tableMapping.ColumnMappings.Add("DescCodOp", "DescCodOp");
            tableMapping.ColumnMappings.Add("Eficiencia", "Eficiencia");
            tableMapping.ColumnMappings.Add("Linea", "Linea");
            tableMapping.ColumnMappings.Add("FBU", "FBU");
            tableMapping.ColumnMappings.Add("fbu_desc", "fbu_desc");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::ReportsApplication1.Properties.Settings.Default.EficienConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        IndiceVoucher.Fecha, IndiceVoucher.Turno, DetVoucher.Linea, FBU_s.FBU, FBU_s.Descripcion AS fbu_desc, EmpVoucher.Empleado AS numempl, 
                         Empleados.Nombre AS nombEmpl, EmpVoucher.Supervisor, DetVoucher.Empezo, DetVoucher.Termino, DetVoucher.CodigoOperacion, 
                         CodigosDeOperacion.DescEsp AS DescCodOp, DetVoucher.Horas, DetVoucher.ProdTotal, DetVoucher.Produccion, DetVoucher.Eficiencia
FROM            (((CodigosDeOperacion INNER JOIN
                         (IndiceVoucher INNER JOIN
                         DetVoucher ON IndiceVoucher.NoVoucher = DetVoucher.NoVoucher) ON CodigosDeOperacion.CodigoOperacion = DetVoucher.CodigoOperacion) INNER JOIN
                         FBU_s ON CodigosDeOperacion.FBU = FBU_s.FBU) LEFT OUTER JOIN
                         (Empleados RIGHT OUTER JOIN
                         EmpVoucher ON Empleados.Empleado = EmpVoucher.Empleado) ON IndiceVoucher.NoVoucher = EmpVoucher.NoVoucher)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EficienDataSet.vouchersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EficienDataSet.vouchersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EficienDataSet.vouchersDataTable dataTable = new EficienDataSet.vouchersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lstLineasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public lstLineasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lstLineas";
            tableMapping.ColumnMappings.Add("Linea", "Linea");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::ReportsApplication1.Properties.Settings.Default.EficienConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Linea, Descripcion\r\nFROM            Lineas\r\nORDER BY Descripcion";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EficienDataSet.lstLineasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EficienDataSet.lstLineasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EficienDataSet.lstLineasDataTable dataTable = new EficienDataSet.lstLineasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EmpleadosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmpleadosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Empleados";
            tableMapping.ColumnMappings.Add("Empleado", "Empleado");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `Empleados` (`Empleado`, `Nombre`) VALUES (?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Empleado", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Empleado", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Nombre", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nombre", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::ReportsApplication1.Properties.Settings.Default.EficienConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Empleado, Nombre\r\nFROM            Empleados\r\nORDER BY Nombre";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EficienDataSet.EmpleadosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EficienDataSet.EmpleadosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EficienDataSet.EmpleadosDataTable dataTable = new EficienDataSet.EmpleadosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EficienDataSet.EmpleadosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(EficienDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Empleados");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> Empleado, string Nombre) {
            if ((Empleado.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Empleado.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Nombre == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Nombre));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lstCodDirTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public lstCodDirTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lstCodDir";
            tableMapping.ColumnMappings.Add("Turno", "Turno");
            tableMapping.ColumnMappings.Add("Departamento", "Departamento");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("DHoras", "DHoras");
            tableMapping.ColumnMappings.Add("HEarned", "HEarned");
            tableMapping.ColumnMappings.Add("Eficiencia", "Eficiencia");
            tableMapping.ColumnMappings.Add("Productivity", "Productivity");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::ReportsApplication1.Properties.Settings.Default.EficienConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        DetVoucher.Departamento, Departamentos.Descripcion, IndiceVoucher.Turno, ROUND(SUM(DetVoucher.Horas), 2) AS DHoras, 
                         ROUND(SUM(DetVoucher.HEarned), 2) AS HEarned, ROUND(SUM(DetVoucher.Eficiencia), 2) AS Eficiencia, ROUND(SUM(DetVoucher.Produccion), 2) 
                         AS Productivity
FROM            (((IndiceVoucher INNER JOIN
                         DetVoucher ON IndiceVoucher.NoVoucher = DetVoucher.NoVoucher) INNER JOIN
                         Departamentos ON DetVoucher.Departamento = Departamentos.Departamento) INNER JOIN
                         CodigosDeOperacion ON DetVoucher.CodigoOperacion = CodigosDeOperacion.CodigoOperacion)
WHERE        (IndiceVoucher.Fecha >= #2/23/2007#) AND (IndiceVoucher.Fecha < #2/24/2007#) AND (IndiceVoucher.Turno = 1) AND 
                         (CodigosDeOperacion.CodigoReferencia <> 'CDGOINDIRECTO')
GROUP BY IndiceVoucher.Turno, DetVoucher.Departamento, Departamentos.Descripcion";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EficienDataSet.lstCodDirDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EficienDataSet.lstCodDirDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EficienDataSet.lstCodDirDataTable dataTable = new EficienDataSet.lstCodDirDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lstCodIndTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public lstCodIndTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lstCodInd";
            tableMapping.ColumnMappings.Add("Departamento", "Departamento");
            tableMapping.ColumnMappings.Add("DHoras", "DHoras");
            tableMapping.ColumnMappings.Add("Consecutivo", "Consecutivo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::ReportsApplication1.Properties.Settings.Default.EficienConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        DetVoucher.Departamento, CodigosDeOperacion.Consecutivo, ROUND(SUM(DetVoucher.Horas), 2) AS DHoras
FROM            ((IndiceVoucher INNER JOIN
                         DetVoucher ON IndiceVoucher.NoVoucher = DetVoucher.NoVoucher) INNER JOIN
                         CodigosDeOperacion ON DetVoucher.CodigoOperacion = CodigosDeOperacion.CodigoOperacion)
WHERE        (IndiceVoucher.Fecha >= #2/23/2007#) AND (IndiceVoucher.Fecha < #2/24/2007#) AND (IndiceVoucher.Turno = 1) AND 
                         (CodigosDeOperacion.CodigoReferencia = 'CDGOINDIRECTO')
GROUP BY DetVoucher.Departamento, CodigosDeOperacion.Consecutivo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EficienDataSet.lstCodIndDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EficienDataSet.lstCodIndDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EficienDataSet.lstCodIndDataTable dataTable = new EficienDataSet.lstCodIndDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lstFbusTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public lstFbusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lstFbus";
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("FBU", "FBU");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::ReportsApplication1.Properties.Settings.Default.EficienConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        FBU, Descripcion\r\nFROM            FBU_s\r\nORDER BY FBU";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EficienDataSet.lstFbusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EficienDataSet.lstFbusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EficienDataSet.lstFbusDataTable dataTable = new EficienDataSet.lstFbusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SupervisoresTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SupervisoresTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Supervisores";
            tableMapping.ColumnMappings.Add("Supervisor", "Supervisor");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("ID_Coordinador", "ID_Coordinador");
            tableMapping.ColumnMappings.Add("Nombre_coord", "Nombre_coord");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::ReportsApplication1.Properties.Settings.Default.EficienConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     supervisores.Supervisor, supervisores.Nombre, Coordinadores.ID_Coordinador, Coordinadores.Nombre_coord
FROM         ((Sup_Cord INNER JOIN
                      supervisores ON Sup_Cord.ID_sup = supervisores.Supervisor) INNER JOIN
                      Coordinadores ON Sup_Cord.ID_Cord = Coordinadores.ID_Coordinador)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EficienDataSet.SupervisoresDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EficienDataSet.SupervisoresDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EficienDataSet.SupervisoresDataTable dataTable = new EficienDataSet.SupervisoresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private EmpleadosTableAdapter _empleadosTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public EmpleadosTableAdapter EmpleadosTableAdapter {
            get {
                return this._empleadosTableAdapter;
            }
            set {
                this._empleadosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._empleadosTableAdapter != null) 
                            && (this._empleadosTableAdapter.Connection != null))) {
                    return this._empleadosTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._empleadosTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(EficienDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._empleadosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Empleados.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._empleadosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(EficienDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._empleadosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Empleados.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._empleadosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(EficienDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._empleadosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Empleados.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._empleadosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(EficienDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._empleadosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._empleadosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._empleadosTableAdapter != null)) {
                    revertConnections.Add(this._empleadosTableAdapter, this._empleadosTableAdapter.Connection);
                    this._empleadosTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._empleadosTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._empleadosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._empleadosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._empleadosTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._empleadosTableAdapter != null)) {
                    this._empleadosTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._empleadosTableAdapter]));
                    this._empleadosTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591